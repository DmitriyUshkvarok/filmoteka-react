{"version":3,"file":"static/js/998.7d3feb36.chunk.js","mappings":"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","sources":["components/CommentForm/CpmmentForm.styled.js","components/CommentForm/CommentForm.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyleForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  max-width: 320px;\n  gap: 10px;\n  margin-bottom: 30px;\n`;\n\nexport const FeedbackCommentFroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const StyleLabel = styled.label`\n  display: block;\n  color: var(--color);\n  cursor: pointer;\n`;\n\nexport const StyleInput = styled.input`\n  box-sizing: border-box;\n  background-color: transparent;\n  border: 1px solid var(--border-color);\n  border-radius: 3px;\n  display: block;\n  padding: 5px;\n  outline: none;\n  color: var(--color);\n  font-size: 18px;\n  font-weight: bold;\n`;\n\nexport const Textarea = styled.textarea`\n  box-sizing: border-box;\n  padding: 10px;\n  min-height: 150px;\n  background-color: transparent;\n  border: 1px solid var(--border-color);\n  border-radius: 3px;\n  display: block;\n  outline: none;\n  color: var(--color);\n  font-size: 18px;\n  resize: none;\n`;\n\nexport const ButtonComment = styled.button`\n  max-width: 150px;\n  background-color: transparent;\n  border-radius: 10px;\n  border: 1px solid var(--border-color);\n  color: var(--color);\n  padding: 10px;\n  transition: all var(--transition);\n  cursor: pointer;\n\n  &:hover {\n    background-image: var(--background-body);\n  }\n`;\n","import { useState } from 'react';\nimport {\n  StyleForm,\n  FeedbackCommentFroup,\n  StyleLabel,\n  StyleInput,\n  Textarea,\n  ButtonComment,\n} from './CpmmentForm.styled';\nimport { animateScroll as scroll } from 'react-scroll';\n\nconst CommentForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [isClicked, setIsClicked] = useState(false);\n\n  const isDisabled = !name && !number;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  const handleClickSmoothBtnComment = () => {\n    if (name && number && !isClicked) {\n      scroll.scrollToBottom({\n        duration: 2000,\n        smooth: 'easeInOutQuad',\n        offset: 0.2,\n      });\n      setIsClicked(true);\n    }\n  };\n\n  return (\n    <StyleForm onSubmit={handleSubmit}>\n      <FeedbackCommentFroup>\n        <StyleLabel htmlFor=\"inputNameComment\">Name:</StyleLabel>\n        <StyleInput\n          id=\"inputNameComment\"\n          type=\"text\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n        />\n      </FeedbackCommentFroup>\n      <FeedbackCommentFroup>\n        <StyleLabel htmlFor=\"textarea\"> Message:</StyleLabel>\n        <Textarea\n          id=\"textarea\"\n          maxLength={500}\n          value={number}\n          onChange={e => setNumber(e.target.value)}\n        />\n      </FeedbackCommentFroup>\n      <ButtonComment\n        onClick={handleClickSmoothBtnComment}\n        type=\"submit\"\n        disabled={isDisabled}\n      >\n        Send Comment\n      </ButtonComment>\n    </StyleForm>\n  );\n};\n\nexport default CommentForm;\n","import styled from 'styled-components';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { FaReact } from 'react-icons/fa';\n\nexport const CardsLoader = styled(FaReact)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  fill: var(--color);\n  margin-left: auto;\n  margin-right: auto;\n  animation: rotate 5s infinite linear;\n  -webkit-animation: rotate 5s infinite linear;\n  @keyframes rotate {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nexport const StyleFaTrashAlt = styled(FaTrashAlt)`\n  margin-bottom: 10px;\n  margin-left: auto;\n  cursor: pointer;\n`;\n\nexport const ReviewAndCommentWrapper = styled.div`\n  display: flex;\n  gap: 20px;\n  justify-content: space-between;\n`;\n\nexport const ReviewList = styled.ul`\n  width: 50%;\n  margin-bottom: 90px;\n`;\n\nexport const ReviewListItem = styled.li``;\n\nexport const Author = styled.p`\n  margin-bottom: 20px;\n  font-size: 30px;\n  color: var(--border-color);\n\n  @media screen and (max-width: 660px) {\n    font-size: 20px;\n\n    @media screen and (max-width: 555px) {\n      font-size: 15px;\n    }\n\n    @media screen and (max-width: 490px) {\n      font-size: 11px;\n    }\n  }\n`;\n\nexport const Content = styled.p`\n  font-size: 20px;\n  color: var(--color);\n  margin-bottom: 30px;\n  text-align: justify;\n\n  @media screen and (max-width: 660px) {\n    font-size: 20px;\n\n    @media screen and (max-width: 555px) {\n      font-size: 15px;\n    }\n\n    @media screen and (max-width: 490px) {\n      font-size: 11px;\n    }\n\n    @media screen and (max-width: 370px) {\n      font-size: 7px;\n    }\n  }\n`;\n\nexport const InfoDiscription = styled.p`\n  max-width: 300px;\n  color: var(--color);\n  font-size: 20px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const CommentFormList = styled.ul`\n  background-image: var(--background-header);\n  padding: 15px;\n  border-radius: 10px;\n  width: 50%;\n  display: flex;\n  flex-direction: column;\n  /* overflow-y: auto;\n  max-height: 500px; */\n  margin-bottom: 170px;\n`;\n\nexport const CommentFormItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const AuthorWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-image: var(--background-body);\n  border: 1px solid var(--border-color);\n  border-radius: 10px;\n  padding: 10px;\n\n  @media screen and (max-width: 430px) {\n    flex-direction: column;\n  }\n`;\n\nexport const CommentAuthorName = styled.p`\n  font-size: 30px;\n  color: var(--color);\n\n  @media screen and (max-width: 660px) {\n    font-size: 20px;\n\n    @media screen and (max-width: 555px) {\n      font-size: 15px;\n    }\n\n    @media screen and (max-width: 490px) {\n      font-size: 11px;\n    }\n  }\n`;\n\nexport const SpanAuthor = styled.span`\n  display: flex;\n  font-size: 30px;\n  color: var(--border-color);\n\n  @media screen and (max-width: 660px) {\n    font-size: 20px;\n  }\n\n  @media screen and (max-width: 555px) {\n    font-size: 15px;\n  }\n\n  @media screen and (max-width: 490px) {\n    font-size: 11px;\n  }\n`;\n\nexport const CommentAuthorText = styled.p`\n  color: var(--color);\n  margin-bottom: 30px;\n  text-align: center;\n\n  @media screen and (max-width: 660px) {\n    font-size: 20px;\n  }\n\n  @media screen and (max-width: 555px) {\n    font-size: 15px;\n  }\n\n  @media screen and (max-width: 490px) {\n    font-size: 11px;\n  }\n\n  @media screen and (max-width: 370px) {\n    font-size: 7px;\n  }\n`;\n\nexport const DateInfo = styled.small`\n  color: gray;\n  opacity: 0.7;\n  font-size: 12px;\n`;\n","import axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState, useContext } from 'react';\nimport apiTheMovieDB from 'service/kino-api';\nimport CommentForm from 'components/CommentForm/CommentForm';\nimport {\n  ReviewAndCommentWrapper,\n  Author,\n  Content,\n  ReviewList,\n  ReviewListItem,\n  InfoDiscription,\n  CardsLoader,\n  StyleFaTrashAlt,\n  CommentAuthorName,\n  CommentAuthorText,\n  AuthorWrapper,\n  SpanAuthor,\n  CommentFormList,\n  CommentFormItem,\n  DateInfo,\n} from './Reviews.styled';\nimport Container from 'components/Container/Container';\nimport { useSelector } from 'react-redux';\nimport authSelector from 'redux/auth/auth-selector';\nimport { toast } from 'react-toastify';\nimport moment from 'moment';\nimport { LanguageContext } from 'components/context/languageContext';\n\nfunction Review() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [comments, setComments] = useState([]);\n  const token = useSelector(authSelector.selectToken);\n  const { selectedLanguage } = useContext(LanguageContext);\n\n  useEffect(() => {\n    apiTheMovieDB\n      .fetchMovieReview(movieId, selectedLanguage.iso_639_1)\n      .then(data => {\n        setReviews(data);\n      })\n      .catch(error => {\n        setError(error);\n        setIsLoading(false);\n      })\n      .finally(setIsLoading(false));\n  }, [movieId, selectedLanguage]);\n\n  useEffect(() => {\n    axios\n      .get('https://connections-api.herokuapp.com/contacts')\n      .then(response => {\n        setComments(response.data);\n      })\n      .catch(error => {\n        setError(error);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  if (isLoading) {\n    return <CardsLoader size={30} />;\n  }\n\n  if (error) {\n    return <p>{error.message}</p>;\n  }\n\n  const handleSubmit = data => {\n    const { name, number } = data;\n\n    if (!name || !number) {\n      toast.error('Please fill in all fields!');\n      return;\n    }\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n    const requestBody = {\n      name: name,\n      number: number,\n    };\n    axios\n      .post(\n        'https://connections-api.herokuapp.com/contacts',\n        requestBody,\n        config\n      )\n      .then(response => {\n        setComments([...comments, response.data]);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  const handleDeleteComment = id => {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n    axios\n      .delete(`https://connections-api.herokuapp.com/contacts/${id}`, config)\n      .then(response => {\n        setComments(comments.filter(comment => comment.id !== id));\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n  return (\n    <>\n      <Container>\n        <CommentForm onSubmit={handleSubmit} />\n        <ReviewAndCommentWrapper>\n          <CommentFormList>\n            {comments.length > 0 ? (\n              comments.map(comment => (\n                <CommentFormItem key={comment.id}>\n                  <StyleFaTrashAlt\n                    onClick={() => handleDeleteComment(comment.id)}\n                    size={20}\n                    color=\"red\"\n                  />\n                  <AuthorWrapper>\n                    <SpanAuthor>Author:</SpanAuthor>\n                    <CommentAuthorName>{comment.name}</CommentAuthorName>\n                  </AuthorWrapper>\n                  <CommentAuthorText>{comment.number}</CommentAuthorText>\n                  <DateInfo>\n                    {moment(comment.created_at).format(\n                      'MMMM Do YYYY, h:mm:ss a'\n                    )}\n                  </DateInfo>\n                </CommentFormItem>\n              ))\n            ) : (\n              <InfoDiscription>No comments found</InfoDiscription>\n            )}\n          </CommentFormList>\n          <ReviewList>\n            {reviews && reviews.length > 0 ? (\n              reviews.map(({ author, content, id }) => (\n                <ReviewListItem key={id}>\n                  <Author> {author}</Author>\n                  <Content>{content}</Content>\n                </ReviewListItem>\n              ))\n            ) : (\n              <InfoDiscription>No review members found</InfoDiscription>\n            )}\n          </ReviewList>\n        </ReviewAndCommentWrapper>\n      </Container>\n    </>\n  );\n}\nexport default Review;\n"],"names":["StyleForm","styled","FeedbackCommentFroup","StyleLabel","StyleInput","Textarea","ButtonComment","onSubmit","useState","name","setName","number","setNumber","isClicked","setIsClicked","isDisabled","event","preventDefault","htmlFor","id","type","value","onChange","e","target","maxLength","onClick","scroll","duration","smooth","offset","disabled","CardsLoader","FaReact","StyleFaTrashAlt","FaTrashAlt","ReviewAndCommentWrapper","ReviewList","ReviewListItem","Author","Content","InfoDiscription","CommentFormList","CommentFormItem","AuthorWrapper","CommentAuthorName","SpanAuthor","CommentAuthorText","DateInfo","movieId","useParams","reviews","setReviews","isLoading","setIsLoading","error","setError","comments","setComments","token","useSelector","authSelector","selectedLanguage","useContext","LanguageContext","useEffect","apiTheMovieDB","iso_639_1","then","data","catch","finally","axios","response","size","message","Container","config","headers","Authorization","requestBody","console","log","toast","length","map","comment","filter","handleDeleteComment","color","moment","created_at","format","author","content"],"sourceRoot":""}