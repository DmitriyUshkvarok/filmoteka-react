{"version":3,"file":"static/js/387.4a630a25.chunk.js","mappings":"+QAGaA,GAAcC,EAAAA,EAAAA,IAAOC,EAAAA,IAAPD,CAAH,8XAmBXE,EAAWF,EAAAA,GAAAA,GAAH,qJASRG,EAAWH,EAAAA,GAAAA,GAAH,yRAYRI,EAAWJ,EAAAA,GAAAA,EAAH,gD,mBCqBrB,MAzDA,WACE,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAqBC,EAAAA,EAAAA,YAAWC,EAAAA,GAAhCF,iBAgBR,OAdAG,EAAAA,EAAAA,YAAU,WACRN,GAAa,GACbO,EAAAA,EAAAA,kBACqBb,EAASS,EAAiBK,WAC5CC,MAAK,SAAAC,GACJZ,EAAQY,EAAKb,MACbG,GAAa,EACd,IACAW,OAAM,SAAAV,GACLC,EAASD,GACTD,GAAa,EACd,GACJ,GAAE,CAACN,EAASS,IAETJ,GACK,SAACX,EAAD,CAAawB,KAAM,KAGxBX,GACK,uBAAIA,EAAMY,WAIjB,+BACE,SAACtB,EAAD,UACGM,GAAQA,EAAKiB,OAAS,EACrBjB,EAAKkB,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,GAAvB,OACP,SAAC,KAAD,CAAMC,GAAE,yBAAoBD,EAApB,gBAAR,UACE,UAAC1B,EAAD,YACE,gBACE4B,IACEJ,EAAY,0CAC2BA,GACnC,yCAENK,IAAKJ,EACLK,MAAO,OAET,SAAC7B,EAAD,UAAWwB,MAVEC,IADkCA,EAD5C,KAiBT,oDAKT,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { FaReact } from 'react-icons/fa';\n\nexport const CardsLoader = styled(FaReact)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  fill: var(--color);\n  margin-left: auto;\n  margin-right: auto;\n  animation: rotate 5s infinite linear;\n  -webkit-animation: rotate 5s infinite linear;\n  @keyframes rotate {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nexport const CastList = styled.ul`\n  margin-top: 20px;\n  margin-bottom: 90px;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 15px;\n`;\n\nexport const CastItem = styled.li`\n  border: 1px solid var(--border-color);\n  max-width: 220px;\n  padding: 10px;\n  background: var(--background-header);\n  border-radius: 5px;\n  -webkit-border-radius: 5px;\n  -moz-border-radius: 5px;\n  -ms-border-radius: 5px;\n  -o-border-radius: 5px;\n`;\n\nexport const CastName = styled.p`\n  color: var(--color);\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState, useContext } from 'react';\nimport apiTheMovieDB from 'service/kino-api';\nimport { Link } from 'react-router-dom';\nimport { CastList, CastItem, CastName, CardsLoader } from './Cast.styled';\nimport { LanguageContext } from 'components/context/languageContext';\n\nfunction CastMovie() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const { selectedLanguage } = useContext(LanguageContext);\n\n  useEffect(() => {\n    setIsLoading(true);\n    apiTheMovieDB\n      .fetchMovieCredits(movieId, selectedLanguage.iso_639_1)\n      .then(data => {\n        setCast(data.cast);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        setError(error);\n        setIsLoading(false);\n      });\n  }, [movieId, selectedLanguage]);\n\n  if (isLoading) {\n    return <CardsLoader size={50} />;\n  }\n\n  if (error) {\n    return <p>{error.message}</p>;\n  }\n\n  return (\n    <>\n      <CastList>\n        {cast && cast.length > 0 ? (\n          cast.map(({ profile_path, name, id }) => (\n            <Link to={`/actors/movies/${id}/actors-info`} key={id}>\n              <CastItem key={id}>\n                <img\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                      : 'https://dummyimage.com/200x300/fff/aaa'\n                  }\n                  alt={name}\n                  width={200}\n                />\n                <CastName>{name}</CastName>\n              </CastItem>\n            </Link>\n          ))\n        ) : (\n          <p>No cast members found</p>\n        )}\n      </CastList>\n    </>\n  );\n}\n\nexport default CastMovie;\n"],"names":["CardsLoader","styled","FaReact","CastList","CastItem","CastName","movieId","useParams","useState","cast","setCast","isLoading","setIsLoading","error","setError","selectedLanguage","useContext","LanguageContext","useEffect","apiTheMovieDB","iso_639_1","then","data","catch","size","message","length","map","profile_path","name","id","to","src","alt","width"],"sourceRoot":""}