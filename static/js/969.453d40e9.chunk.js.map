{"version":3,"file":"static/js/969.453d40e9.chunk.js","mappings":"kMACA,GAAgB,iBAAmB,2CAA2C,sBAAwB,gDAAgD,kBAAoB,4CAA4C,gBAAkB,0CAA0C,UAAY,oCAAoC,WAAa,qCAAqC,cAAgB,wCAAwC,kBAAoB,4CAA4C,WAAa,qCAAqC,YAAc,sCAAsC,oBAAsB,+C,qECOlmBA,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGNC,EAASC,EAAAA,KAAaC,MAAM,CAChCL,KAAMI,EAAAA,KAAaE,IAAI,GAAGC,IAAI,IAAIC,WAClCP,MAAOG,EAAAA,KAAaI,WACpBN,SAAUE,EAAAA,KAAaE,IAAI,IAAIC,IAAI,IAAIC,aAiFzC,MA9EA,WACE,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAWA,OACE,iCACE,SAAC,KAAD,CACEd,cAAeA,EACfe,iBAAkBX,EAClBY,SAVe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BR,EAASS,EAAAA,EAAAA,SAAuBF,IAChCC,GACD,EAIG,UAKE,UAAC,KAAD,CAAME,UAAWC,EAAAA,iBAAjB,WACE,eAAID,UAAWC,EAAAA,sBAAf,gCACA,iBAAKD,UAAWC,EAAAA,kBAAhB,WACE,SAAC,KAAD,CACED,UAAWC,EAAAA,UACXC,KAAK,OACLrB,KAAK,OACLsB,YAAY,UAEd,SAAC,KAAD,CAActB,KAAK,aAErB,iBAAKmB,UAAWC,EAAAA,kBAAhB,WACE,SAAC,KAAD,CACED,UAAWC,EAAAA,WACXC,KAAK,QACLrB,KAAK,QACLsB,YAAY,WAEd,SAAC,KAAD,CAActB,KAAK,cAErB,iBAAKmB,UAAWC,EAAAA,kBAAhB,WACE,iBAAKD,UAAWC,EAAAA,gBAAhB,WACE,SAAC,KAAD,CACED,UAAWC,EAAAA,cACXC,KAAMT,EAAe,OAAS,WAC9BZ,KAAK,WACLsB,YAAY,cAEd,iBACEH,UAAWC,EAAAA,kBACXG,QA9CmB,WAC/BV,GAAgB,SAAAW,GAAgB,OAAKA,CAAL,GACjC,EA0CW,SAIGZ,GACC,SAAC,MAAD,CAAYa,MAAM,yBAElB,SAAC,MAAD,CAAOA,MAAM,8BAInB,SAAC,KAAD,CAAcN,UAAWC,EAAAA,WAAgBpB,KAAK,iBAEhD,gBAAKmB,UAAWC,EAAAA,WAAhB,UACE,mBAAQD,UAAWC,EAAAA,YAAiBC,KAAK,SAAzC,kCAMN,cAAGF,UAAWC,EAAAA,oBAAd,6UASL,E,UCpFD,MAVA,WACE,OACE,0BACE,SAACM,EAAA,EAAD,WACE,SAAC,EAAD,OAIP,C","sources":["webpack://react-homework-template/./src/components/MainForm/RegistrationForm/RegistrationForm.module.css?3f6f","components/MainForm/RegistrationForm/RegistrationForm.jsx","pages/RegistrationPage/RegistrationPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formRegistration\":\"RegistrationForm_formRegistration__gb5Lf\",\"formRegistrationTitle\":\"RegistrationForm_formRegistrationTitle__vUSey\",\"feedbackFormGroup\":\"RegistrationForm_feedbackFormGroup__wuj2E\",\"passwordWrapper\":\"RegistrationForm_passwordWrapper__4DVGp\",\"inputName\":\"RegistrationForm_inputName__V26Cs\",\"inputEmail\":\"RegistrationForm_inputEmail__0Z0on\",\"inputPassword\":\"RegistrationForm_inputPassword__H0ojt\",\"toggleShowPasword\":\"RegistrationForm_toggleShowPasword__DzBuR\",\"btnwrapper\":\"RegistrationForm_btnwrapper__Xa-ub\",\"btnRegister\":\"RegistrationForm_btnRegister__oeDmp\",\"formPageDescription\":\"RegistrationForm_formPageDescription__whLhV\"};","import css from './RegistrationForm.module.css';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport authOperation from 'redux/auth/auth-operation';\nimport { BsEye, BsEyeSlash } from 'react-icons/bs';\nimport { useState } from 'react';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst schema = yup.object().shape({\n  name: yup.string().min(4).max(20).required(),\n  email: yup.string().required(),\n  password: yup.string().min(10).max(20).required(),\n});\n\nfunction RegistrationForm() {\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(prevShowPassword => !prevShowPassword);\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(authOperation.register(values));\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form className={css.formRegistration}>\n          <h2 className={css.formRegistrationTitle}>Form Registration</h2>\n          <div className={css.feedbackFormGroup}>\n            <Field\n              className={css.inputName}\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"name\"\n            />\n            <ErrorMessage name=\"name\" />\n          </div>\n          <div className={css.feedbackFormGroup}>\n            <Field\n              className={css.inputEmail}\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"email\"\n            />\n            <ErrorMessage name=\"email\" />\n          </div>\n          <div className={css.feedbackFormGroup}>\n            <div className={css.passwordWrapper}>\n              <Field\n                className={css.inputPassword}\n                type={showPassword ? 'text' : 'password'}\n                name=\"password\"\n                placeholder=\"password\"\n              />\n              <span\n                className={css.toggleShowPasword}\n                onClick={togglePasswordVisibility}\n              >\n                {showPassword ? (\n                  <BsEyeSlash color=\"var(--border-color)\" />\n                ) : (\n                  <BsEye color=\"var(--border-color)\" />\n                )}\n              </span>\n            </div>\n            <ErrorMessage className={css.errorInput} name=\"password\" />\n          </div>\n          <div className={css.btnwrapper}>\n            <button className={css.btnRegister} type=\"submit\">\n              Registration\n            </button>\n          </div>\n        </Form>\n      </Formik>\n      <p className={css.formPageDescription}>\n        Register as a user of our film library and get access to a special\n        library page where you can save your favorite movies to your favorites\n        list and add new films to it. Create your own watchlists and enjoy\n        watching movies that are only available to our users. Register or log in\n        now and start enjoying the best movies!\n      </p>\n    </>\n  );\n}\nexport default RegistrationForm;\n","import MainForm from 'components/MainForm/RegistrationForm/RegistrationForm';\nimport Container from 'components/Container/Container';\n\nfunction RegistrationPage() {\n  return (\n    <div>\n      <Container>\n        <MainForm />\n      </Container>\n    </div>\n  );\n}\n\nexport default RegistrationPage;\n"],"names":["initialValues","name","email","password","schema","yup","shape","min","max","required","dispatch","useDispatch","useState","showPassword","setShowPassword","validationSchema","onSubmit","values","resetForm","authOperation","className","css","type","placeholder","onClick","prevShowPassword","color","Container"],"sourceRoot":""}