{"version":3,"file":"static/js/779.554075ec.chunk.js","mappings":"uPAEaA,EAASC,EAAAA,GAAAA,EAAH,mGAMNC,EAAUD,EAAAA,GAAAA,EAAH,oH,mBC6CpB,MA/CA,WACE,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,iBACoBV,GACjBW,MAAK,SAAAC,GACJR,EAAWQ,EACZ,IACAC,OAAM,SAAAN,GACLC,EAASD,GACTD,GAAa,EACd,IACAQ,QAAQR,GAAa,GACzB,GAAE,CAACN,IAEAK,GACK,sCAGLE,GACK,uBAAIA,EAAMQ,WAIjB,+BACE,SAACC,EAAA,EAAD,WACE,gBAAKC,UAAU,iBAAf,SACGd,GAAWA,EAAQe,OAAS,EAC3Bf,EAAQgB,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACV,iBAAKL,UAAU,qBAAf,WACE,UAACpB,EAAD,sBAAiBuB,MAEjB,UAACrB,EAAD,sBAAkBsB,OAHqBC,EAD/B,KAQZ,wDAMX,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Author = styled.p`\n  margin-bottom: 50px;\n  font-size: 30px;\n  color: var(--border-color);\n`;\n\nexport const Content = styled.p`\n  font-size: 20px;\n  color: var(--color);\n  margin-bottom: 30px;\n  text-align: justify;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport apiTheMovieDB from 'service/kino-api';\nimport { Author, Content } from './Reviews.styled';\nimport Container from 'components/Container/Container';\n\nfunction Review() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    apiTheMovieDB\n      .fetchMovieReview(movieId)\n      .then(data => {\n        setReviews(data);\n      })\n      .catch(error => {\n        setError(error);\n        setIsLoading(false);\n      })\n      .finally(setIsLoading(false));\n  }, [movieId]);\n\n  if (isLoading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>{error.message}</p>;\n  }\n\n  return (\n    <>\n      <Container>\n        <div className=\"css.reviewList\">\n          {reviews && reviews.length > 0 ? (\n            reviews.map(({ author, content, id }) => (\n              <div className=\"css.reviewListItem\" key={id}>\n                <Author>Author: {author}</Author>\n\n                <Content>Content:{content}</Content>\n              </div>\n            ))\n          ) : (\n            <p>No review members found</p>\n          )}\n        </div>\n      </Container>\n    </>\n  );\n}\nexport default Review;\n"],"names":["Author","styled","Content","movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","error","setError","useEffect","apiTheMovieDB","then","data","catch","finally","message","Container","className","length","map","author","content","id"],"sourceRoot":""}