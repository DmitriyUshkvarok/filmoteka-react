{"version":3,"file":"static/js/992.a5298b7c.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ButtonBack/ButtonBack.module.css?8b4f","components/ButtonBack/ButtonBack.jsx","webpack://react-homework-template/./src/pages/MovieDetalisPage/MovieDetalis.module.css?6120","pages/MovieDetalisPage/MovieDetalisPage.jsx","service/kino-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btnBack\":\"ButtonBack_btnBack__tjozC\"};","import css from './ButtonBack.module.css';\n\nconst ButtonBack = () => {\n  return (\n    <>\n      <button className={css.btnBack} type=\"button\">\n        &#8592; Go Back\n      </button>\n    </>\n  );\n};\n\nexport default ButtonBack;\n","// extracted by mini-css-extract-plugin\nexport default {\"detalis\":\"MovieDetalis_detalis__UlcmQ\",\"posterMovie\":\"MovieDetalis_posterMovie__M4a7c\",\"detalisWrapper\":\"MovieDetalis_detalisWrapper__Ap-mN\",\"columnInfo\":\"MovieDetalis_columnInfo__KSsuK\",\"btnBackDetalisWrapper\":\"MovieDetalis_btnBackDetalisWrapper__jOg0F\",\"btnBack\":\"MovieDetalis_btnBack__knIVC\",\"iconBack\":\"MovieDetalis_iconBack__4gnQx\",\"infoTitle\":\"MovieDetalis_infoTitle__V6MOk\",\"scoreDetalis\":\"MovieDetalis_scoreDetalis__wswZn\",\"overviewTitle\":\"MovieDetalis_overviewTitle__-X5em\",\"overview\":\"MovieDetalis_overview__OZ4Y2\",\"ganreListDetails\":\"MovieDetalis_ganreListDetails__2xy5E\",\"columnImg\":\"MovieDetalis_columnImg__rXv+c\",\"detalisImg\":\"MovieDetalis_detalisImg__3LoFp\",\"reviewList\":\"MovieDetalis_reviewList__5y-3B\",\"cast\":\"MovieDetalis_cast__cUluE\",\"review\":\"MovieDetalis_review__gmdkb\",\"videoBackdrop\":\"MovieDetalis_videoBackdrop__VDDyM\",\"videoModal\":\"MovieDetalis_videoModal__nUs6R\",\"iconBackModal\":\"MovieDetalis_iconBackModal__lydSk\",\"addMoviesBtn\":\"MovieDetalis_addMoviesBtn__ETZC0\"};","import { GiReturnArrow } from 'react-icons/gi';\nimport css from './MovieDetalis.module.css';\nimport { toast } from 'react-toastify';\nimport Container from 'components/Container/Container';\nimport { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport apiTheMovieDB from 'service/kino-api';\nimport posterimg from '../../images/poster.jpeg';\nimport YouTube from 'react-youtube';\nimport ButtonBack from 'components/ButtonBack/ButtonBack';\n\nfunction MovieDetalis() {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [movie, setMovie] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [trailerId, setTrailerId] = useState(null);\n  const [urlModal, setUrlModal] = useState(false);\n\n  const backLink = location.state?.from ?? '/';\n\n  function handleFetchTrailer() {\n    apiTheMovieDB.fetchTrailerMovies(movieId).then(videos => {\n      const trailer = videos.find(video => video.type === 'Trailer');\n      if (trailer) {\n        setTrailerId(trailer.key);\n        setUrlModal(true);\n        document.body.style.overflow = 'hidden';\n      } else {\n        setUrlModal(false);\n        toast.error('No trailer available for this movie.');\n      }\n    });\n  }\n\n  useEffect(() => {\n    const favoritesFromStorage = localStorage.getItem('favorites');\n    if (favoritesFromStorage) {\n      setFavorites(JSON.parse(favoritesFromStorage));\n    }\n  }, []);\n\n  useEffect(() => {\n    setIsFavorite(favorites.some(fav => fav.id === movie.id));\n  }, [favorites, movie.id]);\n\n  function toggleFavorites() {\n    const movieToAdd = {\n      id: movie.id,\n      title: movie.title,\n      poster_path: movie.poster_path,\n      vote_average: movie.vote_average.toFixed(1),\n      release_date: movie.release_date.slice(0, 4),\n    };\n    if (isFavorite) {\n      const newFavorites = favorites.filter(fav => fav.id !== movie.id);\n      setFavorites(newFavorites);\n      localStorage.setItem('favorites', JSON.stringify(newFavorites));\n      setIsFavorite(false);\n      toast.success('Film removed from the library');\n    } else {\n      const newFavorites = [...favorites, movieToAdd];\n      setFavorites(newFavorites);\n      localStorage.setItem('favorites', JSON.stringify(newFavorites));\n      setIsFavorite(true);\n      toast.success('Film added to the library');\n    }\n  }\n\n  useEffect(() => {\n    apiTheMovieDB\n      .fetchMovieDetalis(movieId)\n      .then(data => {\n        setMovie(data);\n      })\n      .catch('error');\n  }, [movieId]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', clickKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', clickKeyDown);\n    };\n  });\n\n  function closeModal() {\n    setUrlModal(false);\n    setTrailerId(null);\n    document.body.style.overflow = 'auto';\n  }\n\n  const clickBackdrop = e => {\n    if (e.currentTarget === e.target) {\n      closeModal();\n    }\n  };\n\n  const clickKeyDown = e => {\n    if (e.code === 'Escape') {\n      closeModal();\n    }\n  };\n\n  return (\n    <>\n      {movie && (\n        <section className={css.detalis}>\n          <Container>\n            <div className={css.btnBackDetalisWrapper}>\n              <Link to={backLink}>\n                <ButtonBack />\n              </Link>\n            </div>\n            <div className={css.detalisWrapper}>\n              <img\n                className={css.posterMovie}\n                src={\n                  movie.backdrop_path\n                    ? `https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`\n                    : posterimg\n                }\n                alt={movie.title}\n              />\n              <div className={css.columnInfo}>\n                <h2 className={css.infoTitle}>\n                  {movie.title ? movie.title : 'Movie without a title'}\n                </h2>\n                <p className={css.scoreDetalis}>\n                  User score: {(movie.vote_average * 10).toFixed(0)}%\n                </p>\n                <h3 className={css.overviewTitle}>Overview</h3>\n                <p className={css.overview}>\n                  {movie.overview ? movie.overview : 'Movie without a overview'}\n                </p>\n                <ul className={css.ganreListDetails}>\n                  {movie.genres &&\n                    movie.genres.map(({ name, id }) => (\n                      <li key={id}>{name}</li>\n                    ))}\n                </ul>\n                <ul className={css.reviewList}>\n                  <li className={css.reviewiLstItem}>\n                    <Link to=\"cast\" state={location.state} className={css.cast}>\n                      Cast\n                    </Link>\n                  </li>\n\n                  <li className={css.reviewiLstItem}>\n                    <Link\n                      to=\"review\"\n                      state={location.state}\n                      className={css.review}\n                    >\n                      Rewiew\n                    </Link>\n                  </li>\n                  <li className={css.reviewiLstItem}>\n                    <button\n                      type=\"button\"\n                      className={css.addMoviesBtn}\n                      onClick={toggleFavorites}\n                    >\n                      {isFavorite\n                        ? 'Remove from library'\n                        : 'Add movie to library'}\n                    </button>\n                  </li>\n                </ul>\n              </div>\n              <div className={css.columnImg}>\n                <img\n                  src={\n                    movie.poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                      : posterimg\n                  }\n                  alt={movie.title ? movie.title : 'Movie without a title'}\n                  width={300}\n                  className={css.detalisImg}\n                  style={{ cursor: 'pointer' }}\n                  onClick={handleFetchTrailer}\n                />\n                {urlModal && (\n                  <div className={css.videoBackdrop} onClick={clickBackdrop}>\n                    <GiReturnArrow\n                      className={css.iconBackModal}\n                      onClick={closeModal}\n                    />\n\n                    <YouTube\n                      className={css.videoModal}\n                      videoId={trailerId}\n                      opts={{\n                        width: '100%',\n                        height: '100%',\n                        playerVars: {\n                          autoplay: 1,\n                          controls: 0,\n                          cc_load_policy: 0,\n                          fs: 0,\n                          iv_load_policy: 0,\n                          modestbranding: 0,\n                          rel: 0,\n                          showinfo: 0,\n                        },\n                        origin: 'http://localhost:3000',\n                      }}\n                    />\n                  </div>\n                )}\n              </div>\n            </div>\n\n            <Suspense>\n              <Outlet />\n            </Suspense>\n          </Container>\n        </section>\n      )}\n    </>\n  );\n}\n\nexport default MovieDetalis;\n","import axios from 'axios';\nconst URL = `https://api.themoviedb.org/3/`;\nconst key = 'f27eea818d2010463700365b0c06a16e';\n\nfunction fetchTrending(page = 1) {\n  return axios\n    .get(`${URL}trending/all/day?api_key=${key}&page=${page}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchSearchMovie(query, page = 1) {\n  return axios\n    .get(`${URL}search/movie?query=${query}&api_key=${key}&page=${page}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchMovieDetalis(id) {\n  return axios\n    .get(`${URL}movie/${id}?api_key=${key}`)\n    .then(response => response.data);\n}\n\nfunction fetchMovieCredits(id) {\n  return axios\n    .get(`${URL}movie/${id}/credits?api_key=${key}`)\n    .then(response => response.data);\n}\n\nfunction fetchMovieReview(id) {\n  return axios\n    .get(`${URL}movie/${id}/reviews?api_key=${key}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchTrailerMovies(movieId) {\n  return axios\n    .get(`${URL}movie/${movieId}/videos?api_key=${key}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchAllgenres() {\n  return axios\n    .get(`${URL}/genre/movie/list?api_key=${key}`)\n    .then(response => response.data.genres);\n}\n\nfunction fetchByGenre(id, page = 1) {\n  return axios\n    .get(`${URL}/discover/movie?api_key=${key}&with_genres=${id}&page=${page}`)\n    .then(response => response.data);\n}\n\nfunction fetchActors(page = 1, query = '') {\n  const url = query\n    ? `${URL}search/person?api_key=${key}&page=${page}&query=${query}`\n    : `${URL}person/popular?api_key=${key}&page=${page}`;\n  return axios.get(url).then(response => response.data);\n}\n\nfunction fetchMoviesbyActors(id, page = 1) {\n  return axios\n    .get(`${URL}person/${id}/movie_credits?api_key=${key}&page=${page}`)\n    .then(response => response.data.cast);\n}\n\nfunction fetchByYear(page = 1, selectedYear) {\n  return axios\n    .get(\n      `${URL}discover/movie?api_key=${key}&sort_by=popularity.desc&page=${page}&primary_release_year=${selectedYear}`\n    )\n    .then(response => response.data.results);\n}\n\nfunction fetchExpectedMovies() {\n  return axios\n    .get(`${URL}/movie/upcoming?api_key=${key}`)\n    .then(response => response.data.results);\n}\n\nconst apiTheMovieDB = {\n  fetchMoviesbyActors,\n  fetchTrending,\n  fetchSearchMovie,\n  fetchMovieDetalis,\n  fetchMovieCredits,\n  fetchMovieReview,\n  fetchTrailerMovies,\n  fetchAllgenres,\n  fetchByGenre,\n  fetchActors,\n  fetchByYear,\n  fetchExpectedMovies,\n};\n\nexport default apiTheMovieDB;\n"],"names":["className","css","type","movieId","useParams","location","useLocation","useState","movie","setMovie","favorites","setFavorites","isFavorite","setIsFavorite","trailerId","setTrailerId","urlModal","setUrlModal","backLink","state","from","closeModal","document","body","style","overflow","useEffect","favoritesFromStorage","localStorage","getItem","JSON","parse","some","fav","id","apiTheMovieDB","then","data","catch","window","addEventListener","clickKeyDown","removeEventListener","e","code","Container","to","ButtonBack","src","backdrop_path","posterimg","alt","title","vote_average","toFixed","overview","genres","map","name","onClick","movieToAdd","poster_path","release_date","slice","newFavorites","filter","setItem","stringify","toast","width","cursor","videos","trailer","find","video","key","currentTarget","target","videoId","opts","height","playerVars","autoplay","controls","cc_load_policy","fs","iv_load_policy","modestbranding","rel","showinfo","origin","Suspense","URL","fetchMoviesbyActors","page","axios","response","cast","fetchTrending","results","fetchSearchMovie","query","fetchMovieDetalis","fetchMovieCredits","fetchMovieReview","fetchTrailerMovies","fetchAllgenres","fetchByGenre","fetchActors","url","fetchByYear","selectedYear","fetchExpectedMovies"],"sourceRoot":""}