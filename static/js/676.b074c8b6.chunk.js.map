{"version":3,"file":"static/js/676.b074c8b6.chunk.js","mappings":"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","sources":["components/ButtonBack/ButtonBack.styled.js","components/ButtonBack/ButtonBack.jsx","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesItem/MoviesItem.styled.js","components/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.jsx","pages/TopRatedPage/TopRatedPage.styled.js","pages/TopRatedPage/TopRatedPage.jsx","webpack://react-homework-template/./src/pages/ActorsPage/ActorsPage.module.css?3c6b"],"sourcesContent":["import styled from 'styled-components';\n\nexport const BtnBack = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 10px;\n  border: 1px solid var(--border-color);\n  width: 200px;\n  height: 50px;\n  background: var(--background-header);\n  color: var(--color);\n  -webkit-border-radius: 10px;\n  -moz-border-radius: 10px;\n  -ms-border-radius: 10px;\n  -o-border-radius: 10px;\n  margin-left: auto;\n  margin-right: auto;\n  transition: color 0.4s;\n  -webkit-transition: color 0.4s;\n  -moz-transition: color 0.4s;\n  -ms-transition: color 0.4s;\n  -o-transition: color 0.4s;\n  cursor: pointer;\n\n  &:hover {\n    background: var(--background-body);\n  }\n\n  @media screen and (max-width: 768px) {\n    width: 150px;\n    height: 50px;\n  }\n`;\n","import { BtnBack } from './ButtonBack.styled';\n\nconst ButtonBack = () => {\n  return (\n    <>\n      <BtnBack type=\"button\">&#8592; Go Back</BtnBack>\n    </>\n  );\n};\n\nexport default ButtonBack;\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MoviesList_moviesList__P6SP5\",\"moviesItem\":\"MoviesList_moviesItem__r+0sq\"};","import styled, { css } from 'styled-components';\n\nexport const CardWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n`;\n\nexport const ImgWrapper = styled.div`\n  overflow: hidden;\n  margin-bottom: 5px;\n`;\n\nexport const MoviesImg = styled.img`\n  max-width: 100%;\n  object-fit: cover;\n  transition: transform 0.4s;\n  -webkit-transition: transform 0.4s;\n  -moz-transition: transform 0.4s;\n  -ms-transition: transform 0.4s;\n  -o-transition: transform 0.4s;\n\n  &:hover {\n    transform: scale(1.1);\n    -webkit-transform: scale(1.1);\n    -moz-transform: scale(1.1);\n    -ms-transform: scale(1.1);\n    -o-transform: scale(1.1);\n  }\n`;\n\nexport const CardTitle = styled.h3`\n  max-width: 300px;\n  color: var(--color);\n  font-size: 14px;\n  margin-bottom: 0;\n  margin-top: auto;\n`;\n\nexport const RatingStarsContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const GoldStar = styled.span`\n  font-size: 10px;\n  color: gold;\n`;\n\nexport const GrayStar = styled.span`\n  font-size: 10px;\n  color: gray;\n`;\n\nexport const RatingText = styled.p`\n  color: rgb(36, 35, 35);\n  font-size: 10px;\n`;\n\nexport const RatingNumber = styled.span`\n  font-size: 8px;\n`;\n\nexport const MoviesYear = styled.p`\n  color: red;\n  font-weight: bold;\n  font-size: 12px;\n  margin-left: auto;\n`;\n\n/* Задаем разные цвета для рейтингов */\nexport const red = css`\n  background: #f85032;\n  background: -webkit-linear-gradient(to right, #e73827, #f85032);\n  background: linear-gradient(to right, #e73827, #f85032);\n`;\n\nexport const yellow = css`\n  background: #f7971e;\n  background: -webkit-linear-gradient(to right, #ffd200, #f7971e);\n  background: linear-gradient(to right, #ffd200, #f7971e);\n  color: rgb(36, 35, 35);\n`;\n\nexport const green = css`\n  background: #000000;\n  background: -webkit-linear-gradient(to right, #0f9b0f, #000000);\n  background: linear-gradient(to right, #0f9b0f, #000000);\n  color: #fff;\n`;\n\nexport const RatingBlock = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  width: 10px;\n  height: 10px;\n  padding: 5px;\n  font-weight: bold;\n  margin-left: 10px;\n\n  // добавляем стили для класса rating-red\n  &.rating-red {\n    ${red}\n  }\n\n  // добавляем стили для класса rating-yellow\n  &.rating-yellow {\n    ${yellow}\n  }\n\n  // добавляем стили для класса rating-green\n  &.rating-green {\n    ${green}\n  }\n`;\n","import {\n  CardWrapper,\n  ImgWrapper,\n  MoviesImg,\n  CardTitle,\n  RatingStarsContainer,\n  GoldStar,\n  GrayStar,\n  RatingText,\n  RatingNumber,\n  RatingBlock,\n  MoviesYear,\n} from './MoviesItem.styled';\n\nfunction MoviesItem({ poster_path, title, vote_average, release_date }) {\n  const percentRating = vote_average * 10; // convert 0-10 rating to percentage\n  const goldStars = Math.floor(percentRating / 10); // number of gold stars\n  // eslint-disable-next-line no-unused-vars\n  const grayStars = 10 - goldStars; // number of gray stars\n\n  // create an array of stars with the appropriate color\n  const ratingStars = Array.from({ length: 10 }, (_, i) => {\n    if (i < goldStars) {\n      return <GoldStar key={`star-${i}`}>&#9733;</GoldStar>;\n    } else {\n      return <GrayStar key={`star-${i}`}>&#9733;</GrayStar>;\n    }\n  });\n\n  const getRatingColor = vote_average => {\n    if (vote_average <= 4) {\n      return 'red';\n    } else if (vote_average < 7) {\n      return 'yellow';\n    } else {\n      return 'green';\n    }\n  };\n\n  const ratingColor = getRatingColor(vote_average);\n  const ratingClassName = `rating-${ratingColor}`;\n\n  return (\n    <>\n      <CardWrapper>\n        <ImgWrapper>\n          <MoviesImg\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                : 'https://via.placeholder.com/300x400'\n            }\n            alt={title}\n            width={300}\n          />\n        </ImgWrapper>\n        <CardTitle>{title ? title : 'Movie without a title'}</CardTitle>\n        <RatingStarsContainer>\n          <RatingText>{vote_average ? ratingStars : 'N/A'}</RatingText>\n          <RatingBlock className={ratingClassName}>\n            <RatingNumber>\n              {vote_average ? vote_average.toFixed(1) : 'N/A'}\n            </RatingNumber>\n          </RatingBlock>\n          <MoviesYear>\n            {release_date ? release_date.slice(0, 4) : 'N/A'}\n          </MoviesYear>\n        </RatingStarsContainer>\n      </CardWrapper>\n    </>\n  );\n}\n\nexport default MoviesItem;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport css from './MoviesList.module.css';\nimport MoviesItem from 'components/MoviesItem/MoviesItem';\n\nfunction MoviesList({ movies }) {\n  const location = useLocation();\n  return (\n    <ul className={css.moviesList}>\n      {movies.map(\n        ({ id, poster_path, title, vote_average, release_date }, index) => (\n          <li key={`${id}-${index}`} className={css.moviesItem}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <MoviesItem\n                key={id}\n                id={id}\n                poster_path={poster_path}\n                title={title}\n                vote_average={vote_average}\n                release_date={release_date}\n              />\n            </Link>\n          </li>\n        )\n      )}\n    </ul>\n  );\n}\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n      vote_average: PropTypes.number,\n      release_date: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import styled from 'styled-components';\nimport { FaReact } from 'react-icons/fa';\n\nexport const CardsLoader = styled(FaReact)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: var(--color);\n  margin-left: auto;\n  margin-right: auto;\n  animation: rotate 5s infinite linear;\n  -webkit-animation: rotate 5s infinite linear;\n  @keyframes rotate {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nexport const TitleTopRating = styled.h2`\n  display: flex;\n  justify-content: center;\n  margin-top: 30px;\n  color: var(--color);\n  text-transform: uppercase;\n  margin-bottom: 20px;\n`;\n\nexport const LoadingTopRating = styled.p`\n  width: 200px;\n  text-transform: uppercase;\n  margin-left: auto;\n  margin-right: auto;\n  color: var(--color);\n  font-size: 21px;\n`;\n\nexport const BtnWrapperTop = styled.p`\n  margin-top: 190px;\n\n  @media screen and (max-width: 705px) {\n    margin-top: 230px;\n  }\n\n  @media screen and (max-width: 380px) {\n    margin-top: 250px;\n  }\n`;\n","import Container from 'components/Container/Container';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport css from '../ActorsPage/ActorsPage.module.css';\nimport {\n  TitleTopRating,\n  CardsLoader,\n  BtnWrapperTop,\n} from './TopRatedPage.styled';\nimport { Link, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport apiTheMovieDB from '../../service/kino-api';\nimport { useState, useEffect } from 'react';\nimport ReactPaginate from 'react-paginate';\nimport ButtonBack from 'components/ButtonBack/ButtonBack';\n\nconst TopRatedPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [totalPages, setTotalPages] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    apiTheMovieDB\n      .fetchFilmsByRating(currentPage)\n      .then(({ results, total_pages }) => {\n        setMovies(results);\n        setTotalPages(Math.min(total_pages, 500));\n\n        if (results.length === 0) {\n          toast.error(\"sorry, that's all the actors we could find\");\n        }\n      })\n      .catch(error => {\n        setError(error);\n      })\n      .finally(() => setLoading(false));\n  }, [currentPage]);\n\n  if (error) {\n    return <p>{error.message}</p>;\n  }\n\n  const handlePageChange = ({ selected }) => {\n    if (selected + 1 > totalPages) {\n      return;\n    }\n    setCurrentPage(selected + 1);\n  };\n\n  return (\n    <>\n      <Container>\n        <BtnWrapperTop>\n          <Link to={backLink}>\n            <ButtonBack />\n          </Link>\n        </BtnWrapperTop>\n        <TitleTopRating>Top rating movies</TitleTopRating>\n        {loading ? (\n          <CardsLoader size={50} />\n        ) : (\n          <>\n            <MoviesList movies={movies} />\n          </>\n        )}\n        <ReactPaginate\n          pageCount={totalPages}\n          pageRangeDisplayed={2}\n          marginPagesDisplayed={1}\n          onPageChange={handlePageChange}\n          containerClassName={css.pagination}\n          pageClassName={css.page}\n          activeClassName={css.active}\n          previousClassName={css.previous}\n          nextClassName={css.next}\n          disabledClassName={css.disabled}\n          breakClassName={css.break}\n          previousLabel={'previous'}\n          nextLabel={'next'}\n          breakLabel={'...'}\n        />\n      </Container>\n    </>\n  );\n};\n\nexport default TopRatedPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"ActorsPage_pagination__FWAiz\",\"page\":\"ActorsPage_page__GvG8N\",\"active\":\"ActorsPage_active__vEaUh\",\"previous\":\"ActorsPage_previous__1YRPb\",\"next\":\"ActorsPage_next__xkqqB\",\"disabled\":\"ActorsPage_disabled__9XNEa\"};"],"names":["BtnBack","styled","type","CardWrapper","ImgWrapper","MoviesImg","CardTitle","RatingStarsContainer","GoldStar","GrayStar","RatingText","RatingNumber","MoviesYear","red","css","yellow","green","RatingBlock","poster_path","title","vote_average","release_date","percentRating","goldStars","Math","floor","ratingStars","Array","from","length","_","i","ratingColor","getRatingColor","ratingClassName","src","alt","width","className","toFixed","slice","movies","location","useLocation","map","index","id","to","state","CardsLoader","FaReact","TitleTopRating","BtnWrapperTop","useState","setMovies","loading","setLoading","error","setError","totalPages","setTotalPages","currentPage","setCurrentPage","backLink","useEffect","apiTheMovieDB","then","results","total_pages","min","toast","catch","finally","message","Container","ButtonBack","size","MoviesList","pageCount","pageRangeDisplayed","marginPagesDisplayed","onPageChange","selected","containerClassName","pageClassName","activeClassName","previousClassName","nextClassName","disabledClassName","breakClassName","previousLabel","nextLabel","breakLabel"],"sourceRoot":""}