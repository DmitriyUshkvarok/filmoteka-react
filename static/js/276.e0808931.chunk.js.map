{"version":3,"file":"static/js/276.e0808931.chunk.js","mappings":"6RAEaA,EAAqBC,EAAAA,GAAAA,IAAH,oIAQlBC,EAAgBD,EAAAA,GAAAA,IAAH,uKAQbE,EAAeF,EAAAA,GAAAA,IAAH,2FAMZG,EAAgBH,EAAAA,GAAAA,IAAH,oFAMbI,EAAiBJ,EAAAA,GAAAA,GAAH,0HAOdK,EAAkBL,EAAAA,GAAAA,EAAH,2QAgBfM,EAAuBN,EAAAA,GAAAA,EAAH,mKAUpBO,EAAqBP,EAAAA,GAAAA,EAAH,2QAgBlBQ,EAAmBR,EAAAA,GAAAA,IAAH,2QAgBhBS,EAAYT,EAAAA,GAAAA,EAAH,iHAOTU,EAAcV,EAAAA,GAAAA,OAAH,oK,SCCxB,EApFmB,WACjB,IAAQW,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAoCE,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAsCN,EAAAA,EAAAA,WAAS,GAA/C,eAAOO,EAAP,KAAoBC,EAApB,KAkBA,IAfAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,wBAC2BZ,GACxBa,MAAK,SAAAC,GACJV,EAAcU,EACf,IACAC,OAAM,SAAAR,GACLC,EAASD,GACTS,EAAAA,GAAAA,MAAY,wBACb,IACAC,SAAQ,WACPX,GAAW,EACZ,GACJ,GAAE,CAACN,IAEAO,EACF,OAAO,uBAAIA,EAAMW,UAOnB,OACE,SAACC,EAAA,EAAD,UACGd,GACC,uCAEA,yBACGF,IACC,UAACf,EAAD,YACE,UAACE,EAAD,YACE,SAACC,EAAD,CACE6B,IACEjB,EAAWkB,aAAX,0CACuClB,EAAWkB,cAC9C,sCAENC,IAAKnB,EAAWoB,KAChBC,MAAO,OAET,UAAC9B,EAAD,YACE,8CACCS,EAAWsB,aAEd,SAAC9B,EAAD,UACGQ,EAAWuB,wBAEd,UAAC9B,EAAD,YACE,8CACCO,EAAWwB,mBAEd,UAAC9B,EAAD,YACE,0CACCM,EAAWyB,WAAWC,QAAQ,UAGnC,UAACrC,EAAD,YACE,SAACC,EAAD,UAAiBU,EAAWoB,QAC5B,UAACzB,EAAD,WACGW,EACGN,EAAW2B,UADH,UAEL3B,EAAW2B,UAAUC,MAAM,EAhE3B,KA8DK,QAGZ,SAAChC,EAAD,CAAaiC,QA5CP,WACpBtB,GAAgBD,EACjB,EA0Ce,SACGA,EAAc,OAAS,sBAlCPN,EAAWH,OA4C/C,C","sources":["components/ActorsInfo/ActorsInfo.styled.js","components/ActorsInfo/ActorsInfo.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const InfoActorContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const ActorInfoMain = styled.div`\n  max-width: 50%;\n  padding: 10px;\n  border: 1px solid var(--border-color);\n  border-radius: 5px;\n  background: var(--background-header);\n`;\n\nexport const ActorInfoImg = styled.img`\n  max-width: 100%;\n  border-radius: 5px;\n  margin-bottom: 10px;\n`;\n\nexport const ActorsDetalis = styled.div`\n  max-width: 50%;\n  padding: 10px;\n  border-radius: 5px;\n`;\n\nexport const ActorsInfoName = styled.h3`\n  color: var(--border-color);\n  font-size: 37px;\n  margin-bottom: 20px;\n  text-align: center;\n`;\n\nexport const ActorsInfoBirth = styled.p`\n  color: var(--color);\n  margin-bottom: 15px;\n  font-size: 21px;\n\n  & > span {\n    margin-right: 5px;\n    color: var(--border-color);\n    margin-bottom: 15px;\n  }\n\n  @media screen and (max-width: 480px) {\n    font-size: 13px;\n  }\n`;\n\nexport const ActorsInfoDepartment = styled.p`\n  font-size: 21px;\n  margin-bottom: 15px;\n  color: var(--color);\n\n  @media screen and (max-width: 480px) {\n    font-size: 13px;\n  }\n`;\n\nexport const ActorsPlaceOfBirth = styled.p`\n  color: var(--color);\n  margin-bottom: 15px;\n  font-size: 21px;\n\n  & > span {\n    margin-right: 5px;\n    color: var(--border-color);\n    margin-bottom: 15px;\n  }\n\n  @media screen and (max-width: 480px) {\n    font-size: 13px;\n  }\n`;\n\nexport const ActorsPopularity = styled.div`\n  color: var(--color);\n  margin-bottom: 15px;\n  font-size: 21px;\n\n  & > span {\n    margin-right: 5px;\n    color: var(--border-color);\n    margin-bottom: 15px;\n  }\n\n  @media screen and (max-width: 480px) {\n    font-size: 13px;\n  }\n`;\n\nexport const Biography = styled.p`\n  color: var(--color);\n  font-size: 21px;\n  line-height: 25px;\n  text-align: center;\n`;\n\nexport const BtnReadMore = styled.button`\n  color: var(--border-color);\n  font-size: 21px;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  cursor: pointer;\n`;\n","import Container from 'components/Container/Container';\nimport { toast } from 'react-toastify';\nimport { useState, useEffect } from 'react';\nimport apiTheMovieDB from 'service/kino-api';\nimport { useParams } from 'react-router-dom';\nimport {\n  InfoActorContainer,\n  ActorInfoMain,\n  ActorsDetalis,\n  ActorsInfoName,\n  Biography,\n  ActorInfoImg,\n  ActorsInfoBirth,\n  ActorsInfoDepartment,\n  ActorsPlaceOfBirth,\n  ActorsPopularity,\n  BtnReadMore,\n} from './ActorsInfo.styled';\n\nconst ActorsInfo = () => {\n  const { id } = useParams();\n  const [actorsInfo, setActorsInfo] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showFullBio, setShowFullBio] = useState(false);\n  const MAX_BIO_LENGTH = 300;\n\n  useEffect(() => {\n    apiTheMovieDB\n      .fetchActorInfoAndMovies(id)\n      .then(res => {\n        setActorsInfo(res);\n      })\n      .catch(error => {\n        setError(error);\n        toast.error('sorry, hernya kakasja');\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [id]);\n\n  if (error) {\n    return <p>{error.message}</p>;\n  }\n\n  const toggleFullBio = () => {\n    setShowFullBio(!showFullBio);\n  };\n\n  return (\n    <Container>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <div>\n          {actorsInfo && (\n            <InfoActorContainer key={actorsInfo.id}>\n              <ActorInfoMain>\n                <ActorInfoImg\n                  src={\n                    actorsInfo.profile_path\n                      ? `https://image.tmdb.org/t/p/w500/${actorsInfo.profile_path}`\n                      : 'https://via.placeholder.com/200x300'\n                  }\n                  alt={actorsInfo.name}\n                  width={470}\n                />\n                <ActorsInfoBirth>\n                  <span> Date of birth:</span>\n                  {actorsInfo.birthday}\n                </ActorsInfoBirth>\n                <ActorsInfoDepartment>\n                  {actorsInfo.known_for_department}\n                </ActorsInfoDepartment>\n                <ActorsPlaceOfBirth>\n                  <span>Place of birth:</span>\n                  {actorsInfo.place_of_birth}\n                </ActorsPlaceOfBirth>\n                <ActorsPopularity>\n                  <span>Popularity:</span>\n                  {actorsInfo.popularity.toFixed(1)}\n                </ActorsPopularity>\n              </ActorInfoMain>\n              <ActorsDetalis>\n                <ActorsInfoName>{actorsInfo.name}</ActorsInfoName>\n                <Biography>\n                  {showFullBio\n                    ? actorsInfo.biography\n                    : `${actorsInfo.biography.slice(0, MAX_BIO_LENGTH)}...`}\n                  <BtnReadMore onClick={toggleFullBio}>\n                    {showFullBio ? 'Hide' : 'Read more'}\n                  </BtnReadMore>\n                </Biography>\n              </ActorsDetalis>\n            </InfoActorContainer>\n          )}\n        </div>\n      )}\n    </Container>\n  );\n};\n\nexport default ActorsInfo;\n"],"names":["InfoActorContainer","styled","ActorInfoMain","ActorInfoImg","ActorsDetalis","ActorsInfoName","ActorsInfoBirth","ActorsInfoDepartment","ActorsPlaceOfBirth","ActorsPopularity","Biography","BtnReadMore","id","useParams","useState","actorsInfo","setActorsInfo","loading","setLoading","error","setError","showFullBio","setShowFullBio","useEffect","apiTheMovieDB","then","res","catch","toast","finally","message","Container","src","profile_path","alt","name","width","birthday","known_for_department","place_of_birth","popularity","toFixed","biography","slice","onClick"],"sourceRoot":""}