{"version":3,"file":"static/js/779.e8a846dc.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","service/kino-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Author = styled.p`\n  margin-bottom: 50px;\n  font-size: 30px;\n  color: var(--border-color);\n`;\n\nexport const Content = styled.p`\n  font-size: 20px;\n  color: var(--color);\n  margin-bottom: 30px;\n  text-align: justify;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport apiTheMovieDB from 'service/kino-api';\nimport { Author, Content } from './Reviews.styled';\nimport Container from 'components/Container/Container';\n\nfunction Review() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    apiTheMovieDB\n      .fetchMovieReview(movieId)\n      .then(data => {\n        setReviews(data);\n      })\n      .catch(error => {\n        setError(error);\n        setIsLoading(false);\n      })\n      .finally(setIsLoading(false));\n  }, [movieId]);\n\n  if (isLoading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>{error.message}</p>;\n  }\n\n  return (\n    <>\n      <Container>\n        <div className=\"css.reviewList\">\n          {reviews && reviews.length > 0 ? (\n            reviews.map(({ author, content, id }) => (\n              <div className=\"css.reviewListItem\" key={id}>\n                <Author>Author: {author}</Author>\n\n                <Content>Content:{content}</Content>\n              </div>\n            ))\n          ) : (\n            <p>No review members found</p>\n          )}\n        </div>\n      </Container>\n    </>\n  );\n}\nexport default Review;\n","import axios from 'axios';\nconst URL = `https://api.themoviedb.org/3/`;\nconst key = 'f27eea818d2010463700365b0c06a16e';\n\nfunction fetchTrending(page = 1) {\n  return axios\n    .get(`${URL}trending/all/day?api_key=${key}&page=${page}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchSearchMovie(query, page = 1) {\n  return axios\n    .get(`${URL}search/movie?query=${query}&api_key=${key}&page=${page}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchMovieDetalis(id) {\n  return axios\n    .get(`${URL}movie/${id}?api_key=${key}`)\n    .then(response => response.data);\n}\n\nfunction fetchMovieCredits(id) {\n  return axios\n    .get(`${URL}movie/${id}/credits?api_key=${key}`)\n    .then(response => response.data);\n}\n\nfunction fetchMovieReview(id) {\n  return axios\n    .get(`${URL}movie/${id}/reviews?api_key=${key}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchTrailerMovies(movieId) {\n  return axios\n    .get(`${URL}movie/${movieId}/videos?api_key=${key}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchAllgenres() {\n  return axios\n    .get(`${URL}/genre/movie/list?api_key=${key}`)\n    .then(response => response.data.genres);\n}\n\nfunction fetchByGenre(id, page = 1) {\n  return axios\n    .get(`${URL}/discover/movie?api_key=${key}&with_genres=${id}&page=${page}`)\n    .then(response => response.data);\n}\n\nfunction fetchActors(page = 1, query = '') {\n  const url = query\n    ? `${URL}search/person?api_key=${key}&page=${page}&query=${query}`\n    : `${URL}person/popular?api_key=${key}&page=${page}`;\n  return axios.get(url).then(response => response.data);\n}\n\nfunction fetchMoviesbyActors(id, page = 1) {\n  return axios\n    .get(`${URL}person/${id}/movie_credits?api_key=${key}&page=${page}`)\n    .then(response => response.data.cast);\n}\n\nfunction fetchActorInfoAndMovies(id) {\n  return axios\n    .get(`${URL}person/${id}?api_key=${key}`)\n    .then(response => response.data);\n}\n\nfunction fetchByYear(page = 1, selectedYear) {\n  return axios\n    .get(\n      `${URL}discover/movie?api_key=${key}&sort_by=popularity.desc&page=${page}&primary_release_year=${selectedYear}`\n    )\n    .then(response => response.data.results);\n}\n\nfunction fetchExpectedMovies() {\n  return axios\n    .get(`${URL}/movie/upcoming?api_key=${key}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchFilmsByRating(currentPage = 1) {\n  return axios\n    .get(`${URL}/movie/top_rated?api_key=${key}&page=${currentPage}`)\n    .then(response => response.data);\n}\n\nfunction fetchWaitingForTheMovies(currentPage = 1) {\n  return axios\n    .get(\n      `${URL}/movie/upcoming?api_key=${key}&primary_release_date.gte=${new Date()\n        .toISOString()\n        .slice(0, 10)}&page=${currentPage}`\n    )\n    .then(response => response.data);\n}\n\nconst apiTheMovieDB = {\n  fetchMoviesbyActors,\n  fetchActorInfoAndMovies,\n  fetchTrending,\n  fetchSearchMovie,\n  fetchMovieDetalis,\n  fetchMovieCredits,\n  fetchMovieReview,\n  fetchTrailerMovies,\n  fetchAllgenres,\n  fetchByGenre,\n  fetchActors,\n  fetchByYear,\n  fetchExpectedMovies,\n  fetchFilmsByRating,\n  fetchWaitingForTheMovies,\n};\n\nexport default apiTheMovieDB;\n"],"names":["Author","styled","Content","movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","error","setError","useEffect","apiTheMovieDB","then","data","catch","finally","message","Container","className","length","map","author","content","id","URL","key","fetchMoviesbyActors","page","axios","response","cast","fetchActorInfoAndMovies","fetchTrending","results","fetchSearchMovie","query","fetchMovieDetalis","fetchMovieCredits","fetchMovieReview","fetchTrailerMovies","fetchAllgenres","genres","fetchByGenre","fetchActors","url","fetchByYear","selectedYear","fetchExpectedMovies","fetchFilmsByRating","currentPage","fetchWaitingForTheMovies","Date","toISOString","slice"],"sourceRoot":""}