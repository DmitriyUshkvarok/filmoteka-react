{"version":3,"file":"static/js/387.b66db7aa.chunk.js","mappings":"mQAEaA,EAAWC,EAAAA,GAAAA,GAAH,qJASRC,EAAWD,EAAAA,GAAAA,GAAH,yRAYRE,EAAWF,EAAAA,GAAAA,EAAH,gD,SCuCrB,MAxDA,WACE,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACbI,EAAAA,EAAAA,kBACqBV,GAClBW,MAAK,SAAAC,GACJR,EAAQQ,EAAKT,MACbG,GAAa,EACd,IACAO,OAAM,SAAAN,GACLC,EAASD,GACTD,GAAa,EACd,GACJ,GAAE,CAACN,IAEAK,GACK,sCAGLE,GACK,uBAAIA,EAAMO,WAIjB,+BACE,SAAClB,EAAD,UACGO,GAAQA,EAAKY,OAAS,EACrBZ,EAAKa,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,GAAvB,OACP,SAAC,KAAD,CAAMC,GAAE,yBAAoBD,EAApB,gBAAR,UACE,UAACrB,EAAD,YACE,gBACEuB,IACEJ,EAAY,0CAC2BA,GACnC,sCAENK,IAAKJ,EACLK,MAAO,OAET,SAACxB,EAAD,UAAWmB,MAVEC,IADkCA,EAD5C,KAiBT,oDAKT,C,qCC3DKK,EAAG,gCACHC,EAAM,mCAmGZ,IAAMf,EAAgB,CACpBgB,oBA3CF,SAA6BP,GAAe,IAAXQ,EAAU,uDAAH,EACtC,OAAOC,EAAAA,EAAAA,IAAA,UACGJ,EADH,kBACgBL,EADhB,kCAC4CM,EAD5C,iBACwDE,IAC5DhB,MAAK,SAAAkB,GAAQ,OAAIA,EAASjB,KAAKT,IAAlB,GACjB,EAwCC2B,wBAtCF,SAAiCX,GAC/B,OAAOS,EAAAA,EAAAA,IAAA,UACGJ,EADH,kBACgBL,EADhB,oBAC8BM,IAClCd,MAAK,SAAAkB,GAAQ,OAAIA,EAASjB,IAAb,GACjB,EAmCCmB,cApGF,WAAkC,IAAXJ,EAAU,uDAAH,EAC5B,OAAOC,EAAAA,EAAAA,IAAA,UACGJ,EADH,oCACkCC,EADlC,iBAC8CE,IAClDhB,MAAK,SAAAkB,GAAQ,OAAIA,EAASjB,KAAKoB,OAAlB,GACjB,EAiGCC,iBA/FF,SAA0BC,GAAkB,IAAXP,EAAU,uDAAH,EACtC,OAAOC,EAAAA,EAAAA,IAAA,UACGJ,EADH,8BAC4BU,EAD5B,oBAC6CT,EAD7C,iBACyDE,IAC7DhB,MAAK,SAAAkB,GAAQ,OAAIA,EAASjB,KAAKoB,OAAlB,GACjB,EA4FCG,kBA1FF,SAA2BhB,GACzB,OAAOS,EAAAA,EAAAA,IAAA,UACGJ,EADH,iBACeL,EADf,oBAC6BM,IACjCd,MAAK,SAAAkB,GAAQ,OAAIA,EAASjB,IAAb,GACjB,EAuFCwB,kBArFF,SAA2BjB,GACzB,OAAOS,EAAAA,EAAAA,IAAA,UACGJ,EADH,iBACeL,EADf,4BACqCM,IACzCd,MAAK,SAAAkB,GAAQ,OAAIA,EAASjB,IAAb,GACjB,EAkFCyB,iBAhFF,SAA0BlB,GACxB,OAAOS,EAAAA,EAAAA,IAAA,UACGJ,EADH,iBACeL,EADf,4BACqCM,IACzCd,MAAK,SAAAkB,GAAQ,OAAIA,EAASjB,KAAKoB,OAAlB,GACjB,EA6ECM,mBA3EF,SAA4BtC,GAC1B,OAAO4B,EAAAA,EAAAA,IAAA,UACGJ,EADH,iBACexB,EADf,2BACyCyB,IAC7Cd,MAAK,SAAAkB,GAAQ,OAAIA,EAASjB,KAAKoB,OAAlB,GACjB,EAwECO,eAtEF,WACE,OAAOX,EAAAA,EAAAA,IAAA,UACGJ,EADH,qCACmCC,IACvCd,MAAK,SAAAkB,GAAQ,OAAIA,EAASjB,KAAK4B,MAAlB,GACjB,EAmECC,aAjEF,SAAsBtB,GAAe,IAAXQ,EAAU,uDAAH,EAC/B,OAAOC,EAAAA,EAAAA,IAAA,UACGJ,EADH,mCACiCC,EADjC,wBACoDN,EADpD,iBAC+DQ,IACnEhB,MAAK,SAAAkB,GAAQ,OAAIA,EAASjB,IAAb,GACjB,EA8DC8B,YA5DF,WAA4C,IAAvBf,EAAsB,uDAAf,EAAGO,EAAY,uDAAJ,GAC/BS,EAAMT,EAAK,UACVV,EADU,iCACkBC,EADlB,iBAC8BE,EAD9B,kBAC4CO,GAD5C,UAEVV,EAFU,kCAEmBC,EAFnB,iBAE+BE,GAChD,OAAOC,EAAAA,EAAAA,IAAUe,GAAKhC,MAAK,SAAAkB,GAAQ,OAAIA,EAASjB,IAAb,GACpC,EAwDCgC,YA1CF,WAA8C,IAAzBjB,EAAwB,uDAAjB,EAAGkB,EAAc,uCAC3C,OAAOjB,EAAAA,EAAAA,IAAA,UAEAJ,EAFA,kCAE6BC,EAF7B,yCAEiEE,EAFjE,iCAE8FkB,IAElGlC,MAAK,SAAAkB,GAAQ,OAAIA,EAASjB,KAAKoB,OAAlB,GACjB,EAqCCc,oBAnCF,WACE,OAAOlB,EAAAA,EAAAA,IAAA,UACGJ,EADH,mCACiCC,IACrCd,MAAK,SAAAkB,GAAQ,OAAIA,EAASjB,KAAKoB,OAAlB,GACjB,EAgCCe,mBA9BF,WAA8C,IAAlBC,EAAiB,uDAAH,EACxC,OAAOpB,EAAAA,EAAAA,IAAA,UACGJ,EADH,oCACkCC,EADlC,iBAC8CuB,IAClDrC,MAAK,SAAAkB,GAAQ,OAAIA,EAASjB,IAAb,GACjB,EA2BCqC,yBAzBF,WAAoD,IAAlBD,EAAiB,uDAAH,EAC9C,OAAOpB,EAAAA,EAAAA,IAAA,UAEAJ,EAFA,mCAE8BC,EAF9B,sCAE8D,IAAIyB,MAClEC,cACAC,MAAM,EAAG,IAJT,iBAIqBJ,IAEzBrC,MAAK,SAAAkB,GAAQ,OAAIA,EAASjB,IAAb,GACjB,GAoBD,K","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","service/kino-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  margin-top: 20px;\n  margin-bottom: 50px;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 15px;\n`;\n\nexport const CastItem = styled.li`\n  border: 1px solid var(--border-color);\n  max-width: 220px;\n  padding: 10px;\n  background: var(--background-header);\n  border-radius: 5px;\n  -webkit-border-radius: 5px;\n  -moz-border-radius: 5px;\n  -ms-border-radius: 5px;\n  -o-border-radius: 5px;\n`;\n\nexport const CastName = styled.p`\n  color: var(--color);\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport apiTheMovieDB from 'service/kino-api';\nimport { Link } from 'react-router-dom';\nimport { CastList, CastItem, CastName } from './Cast.styled';\n\nfunction CastMovie() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    apiTheMovieDB\n      .fetchMovieCredits(movieId)\n      .then(data => {\n        setCast(data.cast);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        setError(error);\n        setIsLoading(false);\n      });\n  }, [movieId]);\n\n  if (isLoading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>{error.message}</p>;\n  }\n\n  return (\n    <>\n      <CastList>\n        {cast && cast.length > 0 ? (\n          cast.map(({ profile_path, name, id }) => (\n            <Link to={`/actors/movies/${id}/actors-info`} key={id}>\n              <CastItem key={id}>\n                <img\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                      : 'https://via.placeholder.com/200x300'\n                  }\n                  alt={name}\n                  width={200}\n                />\n                <CastName>{name}</CastName>\n              </CastItem>\n            </Link>\n          ))\n        ) : (\n          <p>No cast members found</p>\n        )}\n      </CastList>\n    </>\n  );\n}\n\nexport default CastMovie;\n","import axios from 'axios';\nconst URL = `https://api.themoviedb.org/3/`;\nconst key = 'f27eea818d2010463700365b0c06a16e';\n\nfunction fetchTrending(page = 1) {\n  return axios\n    .get(`${URL}trending/all/day?api_key=${key}&page=${page}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchSearchMovie(query, page = 1) {\n  return axios\n    .get(`${URL}search/movie?query=${query}&api_key=${key}&page=${page}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchMovieDetalis(id) {\n  return axios\n    .get(`${URL}movie/${id}?api_key=${key}`)\n    .then(response => response.data);\n}\n\nfunction fetchMovieCredits(id) {\n  return axios\n    .get(`${URL}movie/${id}/credits?api_key=${key}`)\n    .then(response => response.data);\n}\n\nfunction fetchMovieReview(id) {\n  return axios\n    .get(`${URL}movie/${id}/reviews?api_key=${key}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchTrailerMovies(movieId) {\n  return axios\n    .get(`${URL}movie/${movieId}/videos?api_key=${key}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchAllgenres() {\n  return axios\n    .get(`${URL}/genre/movie/list?api_key=${key}`)\n    .then(response => response.data.genres);\n}\n\nfunction fetchByGenre(id, page = 1) {\n  return axios\n    .get(`${URL}/discover/movie?api_key=${key}&with_genres=${id}&page=${page}`)\n    .then(response => response.data);\n}\n\nfunction fetchActors(page = 1, query = '') {\n  const url = query\n    ? `${URL}search/person?api_key=${key}&page=${page}&query=${query}`\n    : `${URL}person/popular?api_key=${key}&page=${page}`;\n  return axios.get(url).then(response => response.data);\n}\n\nfunction fetchMoviesbyActors(id, page = 1) {\n  return axios\n    .get(`${URL}person/${id}/movie_credits?api_key=${key}&page=${page}`)\n    .then(response => response.data.cast);\n}\n\nfunction fetchActorInfoAndMovies(id) {\n  return axios\n    .get(`${URL}person/${id}?api_key=${key}`)\n    .then(response => response.data);\n}\n\nfunction fetchByYear(page = 1, selectedYear) {\n  return axios\n    .get(\n      `${URL}discover/movie?api_key=${key}&sort_by=popularity.desc&page=${page}&primary_release_year=${selectedYear}`\n    )\n    .then(response => response.data.results);\n}\n\nfunction fetchExpectedMovies() {\n  return axios\n    .get(`${URL}/movie/upcoming?api_key=${key}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchFilmsByRating(currentPage = 1) {\n  return axios\n    .get(`${URL}/movie/top_rated?api_key=${key}&page=${currentPage}`)\n    .then(response => response.data);\n}\n\nfunction fetchWaitingForTheMovies(currentPage = 1) {\n  return axios\n    .get(\n      `${URL}/movie/upcoming?api_key=${key}&primary_release_date.gte=${new Date()\n        .toISOString()\n        .slice(0, 10)}&page=${currentPage}`\n    )\n    .then(response => response.data);\n}\n\nconst apiTheMovieDB = {\n  fetchMoviesbyActors,\n  fetchActorInfoAndMovies,\n  fetchTrending,\n  fetchSearchMovie,\n  fetchMovieDetalis,\n  fetchMovieCredits,\n  fetchMovieReview,\n  fetchTrailerMovies,\n  fetchAllgenres,\n  fetchByGenre,\n  fetchActors,\n  fetchByYear,\n  fetchExpectedMovies,\n  fetchFilmsByRating,\n  fetchWaitingForTheMovies,\n};\n\nexport default apiTheMovieDB;\n"],"names":["CastList","styled","CastItem","CastName","movieId","useParams","useState","cast","setCast","isLoading","setIsLoading","error","setError","useEffect","apiTheMovieDB","then","data","catch","message","length","map","profile_path","name","id","to","src","alt","width","URL","key","fetchMoviesbyActors","page","axios","response","fetchActorInfoAndMovies","fetchTrending","results","fetchSearchMovie","query","fetchMovieDetalis","fetchMovieCredits","fetchMovieReview","fetchTrailerMovies","fetchAllgenres","genres","fetchByGenre","fetchActors","url","fetchByYear","selectedYear","fetchExpectedMovies","fetchFilmsByRating","currentPage","fetchWaitingForTheMovies","Date","toISOString","slice"],"sourceRoot":""}