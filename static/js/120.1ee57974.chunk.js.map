{"version":3,"file":"static/js/120.1ee57974.chunk.js","mappings":"oRAEaA,EAAgBC,EAAAA,GAAAA,GAAH,8RAgBbC,EAAgBD,EAAAA,GAAAA,GAAH,qJASbE,EAAgBF,EAAAA,GAAAA,IAAH,oRAYbG,EAAaH,EAAAA,GAAAA,IAAH,oEAKVI,EAAYJ,EAAAA,GAAAA,IAAH,qaAkBTK,EAAYL,EAAAA,GAAAA,GAAH,iHAOTM,EAAuBN,EAAAA,GAAAA,IAAH,6EAMpBO,GAAMC,EAAAA,EAAAA,IAAH,gLAMHC,GAASD,EAAAA,EAAAA,IAAH,2MAONE,GAAQF,EAAAA,EAAAA,IAAH,gMAOLG,EAAiBX,EAAAA,GAAAA,EAAH,4xBAarBO,EAKAE,EAKAC,GAIOE,EAAaZ,EAAAA,GAAAA,EAAH,uG,SC1CvB,EAjEoB,WAClB,OAA0Ca,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACMC,GAAWC,EAAAA,EAAAA,MAOjB,OALAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAYC,KAAKC,MAAMC,aAAaC,QAAQ,cAClDR,EAAiBI,GAAa,GAC/B,GAAE,KAGD,+BACE,UAACK,EAAA,EAAD,YACE,SAACzB,EAAD,yBACA,SAACE,EAAD,UACGa,EAAcW,KACb,YAA6D,IAA1DC,EAAyD,EAAzDA,GAAIC,EAAqD,EAArDA,YAAaC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aAWjCC,EAAe,iBATfF,GAAgB,EACX,MACEA,EAAe,EACjB,SAEA,SAKX,OACE,SAAC,KAAD,CAAMG,GAAE,kBAAaN,GAAMO,MAAO,CAAEC,KAAMlB,GAA1C,UACE,UAACd,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CACE+B,IACER,EAAW,0CAC4BA,GACnC,sCAENS,IAAKR,EACLS,MAAO,SAGX,SAAChC,EAAD,UACGuB,GAAgB,2BAEnB,UAACtB,EAAD,YACE,SAACK,EAAD,CAAgB2B,UAAWP,EAA3B,SAC2B,kBAAjBF,EACJA,EAAaU,QAAQ,GACrB,SAEN,SAAC3B,EAAD,UACGkB,GAA8B,aAtBjBJ,IADqCA,EA6B9D,UAMZ,C","sources":["pages/LibraryPage/LybraryPage.styled.js","pages/LibraryPage/LibraryPage.jsx"],"sourcesContent":["import styled, { css } from 'styled-components';\n\nexport const LibrarryTitle = styled.h1`\n  margin-top: 190px;\n  margin-bottom: 50px;\n  color: var(--color);\n  display: flex;\n  justify-content: center;\n\n  @media screen and (max-width: 705px) {\n    margin-top: 230px;\n  }\n\n  @media screen and (max-width: 380px) {\n    margin-top: 250px;\n  }\n`;\n\nexport const FavoritesList = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin-bottom: 50px;\n  overflow: hidden;\n`;\n\nexport const FavoritesItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  border: 1px solid var(--border-color);\n  border-radius: 5px;\n  max-width: 320px;\n  padding: 10px;\n  background: var(--background-movies-item);\n  //   height: 100%;\n`;\n\nexport const ImgWrapper = styled.div`\n  overflow: hidden;\n  margin-bottom: 5px;\n`;\n\nexport const MoviesImg = styled.img`\n  max-width: 100%;\n  object-fit: cover;\n  transition: transform 0.4s;\n  -webkit-transition: transform 0.4s;\n  -moz-transition: transform 0.4s;\n  -ms-transition: transform 0.4s;\n  -o-transition: transform 0.4s;\n\n  &:hover {\n    transform: scale(1.1);\n    -webkit-transform: scale(1.1);\n    -moz-transform: scale(1.1);\n    -ms-transform: scale(1.1);\n    -o-transform: scale(1.1);\n  }\n`;\n\nexport const CardTitle = styled.h3`\n  max-width: 300px;\n  color: var(--color);\n  font-size: 14px;\n  margin-bottom: 10px;\n`;\n\nexport const RatingStarsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\n/* Задаем разные цвета для рейтингов */\nexport const red = css`\n  background: #f85032;\n  background: -webkit-linear-gradient(to right, #e73827, #f85032);\n  background: linear-gradient(to right, #e73827, #f85032);\n`;\n\nexport const yellow = css`\n  background: #f7971e;\n  background: -webkit-linear-gradient(to right, #ffd200, #f7971e);\n  background: linear-gradient(to right, #ffd200, #f7971e);\n  color: rgb(36, 35, 35);\n`;\n\nexport const green = css`\n  background: #000000;\n  background: -webkit-linear-gradient(to right, #0f9b0f, #000000);\n  background: linear-gradient(to right, #0f9b0f, #000000);\n  color: #fff;\n`;\n\nexport const ExpextedRating = styled.p`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  width: 10px;\n  height: 10px;\n  padding: 5px;\n  font-weight: bold;\n  font-size: 8px;\n\n  // добавляем стили для класса rating-red\n  &.rating-red {\n    ${red}\n  }\n\n  // добавляем стили для класса rating-yellow\n  &.rating-yellow {\n    ${yellow}\n  }\n\n  // добавляем стили для класса rating-green\n  &.rating-green {\n    ${green}\n  }\n`;\n\nexport const MoviesYear = styled.p`\n  color: red;\n  font-weight: bold;\n  font-size: 12px;\n  margin-left: auto;\n`;\n","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport Container from 'components/Container/Container';\nimport {\n  LibrarryTitle,\n  FavoritesList,\n  FavoritesItem,\n  ImgWrapper,\n  MoviesImg,\n  CardTitle,\n  RatingStarsContainer,\n  MoviesYear,\n  ExpextedRating,\n} from './LybraryPage.styled';\n\nconst LibraryPage = () => {\n  const [favoritesList, setFavoritesList] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    const favorites = JSON.parse(localStorage.getItem('favorites'));\n    setFavoritesList(favorites || []);\n  }, []);\n\n  return (\n    <>\n      <Container>\n        <LibrarryTitle>Favorites</LibrarryTitle>\n        <FavoritesList>\n          {favoritesList.map(\n            ({ id, poster_path, title, vote_average, release_date }) => {\n              const getRatingColor = () => {\n                if (vote_average <= 4) {\n                  return 'red';\n                } else if (vote_average < 7) {\n                  return 'yellow';\n                } else {\n                  return 'green';\n                }\n              };\n              const ratingColor = getRatingColor();\n              const ratingClassName = `rating-${ratingColor}`;\n              return (\n                <Link to={`/movies/${id}`} state={{ from: location }} key={id}>\n                  <FavoritesItem key={id}>\n                    <ImgWrapper>\n                      <MoviesImg\n                        src={\n                          poster_path\n                            ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                            : 'https://via.placeholder.com/300x400'\n                        }\n                        alt={title}\n                        width={300}\n                      />\n                    </ImgWrapper>\n                    <CardTitle>\n                      {title ? title : 'Movie without a title'}\n                    </CardTitle>\n                    <RatingStarsContainer>\n                      <ExpextedRating className={ratingClassName}>\n                        {typeof vote_average === 'number'\n                          ? vote_average.toFixed(1)\n                          : 'N/A'}\n                      </ExpextedRating>\n                      <MoviesYear>\n                        {release_date ? release_date : 'N/A'}\n                      </MoviesYear>\n                    </RatingStarsContainer>\n                  </FavoritesItem>\n                </Link>\n              );\n            }\n          )}\n        </FavoritesList>\n      </Container>\n    </>\n  );\n};\n\nexport default LibraryPage;\n"],"names":["LibrarryTitle","styled","FavoritesList","FavoritesItem","ImgWrapper","MoviesImg","CardTitle","RatingStarsContainer","red","css","yellow","green","ExpextedRating","MoviesYear","useState","favoritesList","setFavoritesList","location","useLocation","useEffect","favorites","JSON","parse","localStorage","getItem","Container","map","id","poster_path","title","vote_average","release_date","ratingClassName","to","state","from","src","alt","width","className","toFixed"],"sourceRoot":""}