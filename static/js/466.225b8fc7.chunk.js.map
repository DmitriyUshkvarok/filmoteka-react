{"version":3,"file":"static/js/466.225b8fc7.chunk.js","mappings":"+PAGaA,GAAcC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,sBAEXE,GAAYF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,2cAoBTI,EAAiBJ,EAAAA,GAAAA,GAAH,8FAMdK,EAAoBL,EAAAA,GAAAA,IAAH,wCAIjBM,EAAkBN,EAAAA,GAAAA,IAAH,+CAIfO,EAAoBP,EAAAA,GAAAA,KAAH,8RAWjBQ,GAAaR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,wXAmBVU,GAAgBV,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,wXAmBbW,EAAaX,EAAAA,GAAAA,IAAH,wEAMVY,EAAWZ,EAAAA,GAAAA,OAAH,ohBAwBRa,EAAsBb,EAAAA,GAAAA,EAAH,wM,iDClG1Bc,EAAgB,CACpBC,MAAO,GACPC,SAAU,IAGNC,EAASC,EAAAA,KAAaC,MAAM,CAChCJ,MAAOG,EAAAA,KAAaE,WACpBJ,SAAUE,EAAAA,KAAaG,IAAI,IAAIC,IAAI,IAAIF,aA6DzC,MA1DA,WACE,IAAMG,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAWA,OACE,iCACE,SAAC5B,EAAD,CACEe,cAAeA,EACfc,iBAAkBX,EAClBY,SAde,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BR,EAASS,EAAAA,EAAAA,MAAoBF,IAC7BC,GACD,EAQG,UAKE,UAAC7B,EAAD,YACE,SAACE,EAAD,0BACA,UAACC,EAAD,YACE,SAACG,EAAD,CAAYyB,KAAK,QAAQC,KAAK,QAAQC,YAAY,WAClD,SAAC,KAAD,CAAcD,KAAK,cAErB,UAAC7B,EAAD,YACE,UAACC,EAAD,YACE,SAACI,EAAD,CACEuB,KAAMP,EAAe,OAAS,WAC9BQ,KAAK,WACLC,YAAY,cAEd,SAAC5B,EAAD,CAAmB6B,QAxBE,WAC/BT,GAAgB,SAAAU,GAAgB,OAAKA,CAAL,GACjC,EAsBW,SACGX,GACC,SAAC,MAAD,CAAYY,MAAM,yBAElB,SAAC,MAAD,CAAOA,MAAM,8BAInB,SAAC,KAAD,CAAcJ,KAAK,iBAErB,SAACvB,EAAD,WACE,SAACC,EAAD,CAAUqB,KAAK,SAAf,4BAIN,SAACpB,EAAD,8UASL,EC5ED,EARkB,WAChB,OACE,0BACE,SAAC,EAAD,KAGL,C","sources":["components/MainForm/LogInForm/LoginForm.styles.js","components/MainForm/LogInForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Formik, Form, Field } from 'formik';\n\nexport const FormikStyle = styled(Formik)``;\n\nexport const FormLogin = styled(Form)`\n  max-width: 700px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 20px;\n  background: var(--background-header);\n  border: 1px solid var(--border-color);\n  gap: 20px;\n  border-radius: 5px;\n  -webkit-border-radius: 5px;\n  -moz-border-radius: 5px;\n  -ms-border-radius: 5px;\n  -o-border-radius: 5px;\n  margin-top: 150px;\n`;\n\nexport const FormLoginTitle = styled.h2`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const FeedbackFormGroup = styled.div`\n  width: 100%;\n`;\n\nexport const PasswordWrapper = styled.div`\n  position: relative;\n`;\n\nexport const ToggleShowPasword = styled.span`\n  position: absolute;\n  top: 50%;\n  right: 10px;\n  transform: translate(-50%, -10px);\n  -webkit-transform: translate(-50%, -10px);\n  -moz-transform: translate(-50%, -10px);\n  -ms-transform: translate(-50%, -10px);\n  -o-transform: translate(-50%, -10px);\n`;\n\nexport const InputEmail = styled(Field)`\n  box-sizing: border-box;\n  width: 100%;\n  height: 30px;\n  padding: 5px;\n  background-color: transparent;\n  border: 1px solid var(--border-color);\n  border-radius: 5px;\n  -webkit-border-radius: 5px;\n  -moz-border-radius: 5px;\n  -ms-border-radius: 5px;\n  -o-border-radius: 5px;\n  outline: none;\n\n  &::placeholder {\n    opacity: 0.4;\n  }\n`;\n\nexport const InputPassword = styled(Field)`\n  box-sizing: border-box;\n  width: 100%;\n  height: 30px;\n  padding: 5px;\n  background-color: transparent;\n  border: 1px solid var(--border-color);\n  border-radius: 5px;\n  -webkit-border-radius: 5px;\n  -moz-border-radius: 5px;\n  -ms-border-radius: 5px;\n  -o-border-radius: 5px;\n  outline: none;\n\n  &::placeholder {\n    opacity: 0.4;\n  }\n`;\n\nexport const Btnwrapper = styled.div`\n  width: 100%;\n  display: flex;\n  gap: 10px;\n`;\n\nexport const BtnLogIn = styled.button`\n  box-sizing: border-box;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100px;\n  height: 30px;\n  padding: 5px;\n  background-color: transparent;\n  border: 1px solid var(--border-color);\n  border-radius: 5px;\n  -webkit-border-radius: 5px;\n  -moz-border-radius: 5px;\n  -ms-border-radius: 5px;\n  -o-border-radius: 5px;\n  cursor: pointer;\n  transition: var(--transition);\n\n  &:hover {\n    background-image: var(--background-header);\n    color: var(--color);\n  }\n`;\n\nexport const FormPageDescription = styled.p`\n  max-width: 800px;\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 30px;\n  color: var(--color);\n  font-size: 18px;\n  line-height: 24px;\n`;\n","import {\n  FormikStyle,\n  FormLogin,\n  FormLoginTitle,\n  FeedbackFormGroup,\n  InputEmail,\n  InputPassword,\n  Btnwrapper,\n  BtnLogIn,\n  PasswordWrapper,\n  ToggleShowPasword,\n  FormPageDescription,\n} from './LoginForm.styles.js';\nimport { ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport authOperation from 'redux/auth/auth-operation';\nimport { BsEye, BsEyeSlash } from 'react-icons/bs';\nimport { useState } from 'react';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst schema = yup.object().shape({\n  email: yup.string().required(),\n  password: yup.string().min(10).max(20).required(),\n});\n\nfunction LogInForm() {\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(authOperation.logIn(values));\n    resetForm();\n  };\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(prevShowPassword => !prevShowPassword);\n  };\n\n  return (\n    <>\n      <FormikStyle\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <FormLogin>\n          <FormLoginTitle>Login Form</FormLoginTitle>\n          <FeedbackFormGroup>\n            <InputEmail type=\"email\" name=\"email\" placeholder=\"email\" />\n            <ErrorMessage name=\"email\" />\n          </FeedbackFormGroup>\n          <FeedbackFormGroup>\n            <PasswordWrapper>\n              <InputPassword\n                type={showPassword ? 'text' : 'password'}\n                name=\"password\"\n                placeholder=\"password\"\n              />\n              <ToggleShowPasword onClick={togglePasswordVisibility}>\n                {showPassword ? (\n                  <BsEyeSlash color=\"var(--border-color)\" />\n                ) : (\n                  <BsEye color=\"var(--border-color)\" />\n                )}\n              </ToggleShowPasword>\n            </PasswordWrapper>\n            <ErrorMessage name=\"password\" />\n          </FeedbackFormGroup>\n          <Btnwrapper>\n            <BtnLogIn type=\"submit\">Log In</BtnLogIn>\n          </Btnwrapper>\n        </FormLogin>\n      </FormikStyle>\n      <FormPageDescription>\n        Register as a user of our film library and get access to a special\n        library page where you can save your favorite movies to your favorites\n        list and add new films to it. Create your own watchlists and enjoy\n        watching movies that are only available to our users. Register or log in\n        now and start enjoying the best movies!\n      </FormPageDescription>\n    </>\n  );\n}\nexport default LogInForm;\n","import React from 'react';\nimport LogInForm from 'components/MainForm/LogInForm/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <div>\n      <LogInForm />\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["FormikStyle","styled","Formik","FormLogin","Form","FormLoginTitle","FeedbackFormGroup","PasswordWrapper","ToggleShowPasword","InputEmail","Field","InputPassword","Btnwrapper","BtnLogIn","FormPageDescription","initialValues","email","password","schema","yup","shape","required","min","max","dispatch","useDispatch","useState","showPassword","setShowPassword","validationSchema","onSubmit","values","resetForm","authOperation","type","name","placeholder","onClick","prevShowPassword","color"],"sourceRoot":""}