{"version":3,"file":"static/js/992.6bbda86d.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ButtonBack/ButtonBack.module.css?8b4f","components/ButtonBack/ButtonBack.jsx","webpack://react-homework-template/./src/pages/MovieDetalisPage/MovieDetalis.module.css?6120","pages/MovieDetalisPage/MovieDetalisPage.jsx","service/kino-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btnBack\":\"ButtonBack_btnBack__tjozC\"};","import css from './ButtonBack.module.css';\n\nconst ButtonBack = () => {\n  return (\n    <>\n      <button className={css.btnBack} type=\"button\">\n        &#8592; Go Back\n      </button>\n    </>\n  );\n};\n\nexport default ButtonBack;\n","// extracted by mini-css-extract-plugin\nexport default {\"detalis\":\"MovieDetalis_detalis__UlcmQ\",\"posterMovie\":\"MovieDetalis_posterMovie__M4a7c\",\"detalisWrapper\":\"MovieDetalis_detalisWrapper__Ap-mN\",\"columnInfo\":\"MovieDetalis_columnInfo__KSsuK\",\"btnBackDetalisWrapper\":\"MovieDetalis_btnBackDetalisWrapper__jOg0F\",\"btnBack\":\"MovieDetalis_btnBack__knIVC\",\"iconBack\":\"MovieDetalis_iconBack__4gnQx\",\"infoTitle\":\"MovieDetalis_infoTitle__V6MOk\",\"scoreDetalis\":\"MovieDetalis_scoreDetalis__wswZn\",\"overviewTitle\":\"MovieDetalis_overviewTitle__-X5em\",\"overview\":\"MovieDetalis_overview__OZ4Y2\",\"ganreListDetails\":\"MovieDetalis_ganreListDetails__2xy5E\",\"columnImg\":\"MovieDetalis_columnImg__rXv+c\",\"detalisImg\":\"MovieDetalis_detalisImg__3LoFp\",\"reviewList\":\"MovieDetalis_reviewList__5y-3B\",\"cast\":\"MovieDetalis_cast__cUluE\",\"review\":\"MovieDetalis_review__gmdkb\",\"videoBackdrop\":\"MovieDetalis_videoBackdrop__VDDyM\",\"videoModal\":\"MovieDetalis_videoModal__nUs6R\",\"iconBackModal\":\"MovieDetalis_iconBackModal__lydSk\",\"addMoviesBtn\":\"MovieDetalis_addMoviesBtn__ETZC0\"};","import { GiReturnArrow } from 'react-icons/gi';\nimport css from './MovieDetalis.module.css';\nimport { toast } from 'react-toastify';\nimport Container from 'components/Container/Container';\nimport {\n  useParams,\n  useLocation,\n  Link,\n  Outlet,\n  useNavigate,\n} from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport apiTheMovieDB from 'service/kino-api';\nimport posterimg from '../../images/poster.jpeg';\nimport YouTube from 'react-youtube';\nimport ButtonBack from 'components/ButtonBack/ButtonBack';\n\nfunction MovieDetalis() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [trailerId, setTrailerId] = useState(null);\n  const [urlModal, setUrlModal] = useState(false);\n  const location = useLocation();\n\n  const backLink = location.state?.from ?? '/';\n\n  const navigate = useNavigate();\n  // eslint-disable-next-line no-unused-vars\n  const handleGoBack = () => {\n    navigate('/movie/actors/');\n  };\n\n  function handleFetchTrailer() {\n    apiTheMovieDB.fetchTrailerMovies(movieId).then(videos => {\n      const trailer = videos.find(video => video.type === 'Trailer');\n      if (trailer) {\n        setTrailerId(trailer.key);\n        setUrlModal(true);\n        document.body.style.overflow = 'hidden';\n      } else {\n        setUrlModal(false);\n        toast.error('No trailer available for this movie.');\n      }\n    });\n  }\n\n  useEffect(() => {\n    const favoritesFromStorage = localStorage.getItem('favorites');\n    if (favoritesFromStorage) {\n      setFavorites(JSON.parse(favoritesFromStorage));\n    }\n  }, []);\n\n  useEffect(() => {\n    setIsFavorite(favorites.some(fav => fav.id === movie.id));\n  }, [favorites, movie.id]);\n\n  function toggleFavorites() {\n    const movieToAdd = {\n      id: movie.id,\n      title: movie.title,\n      poster_path: movie.poster_path,\n      vote_average: movie.vote_average.toFixed(1),\n      release_date: movie.release_date.slice(0, 4),\n    };\n    if (isFavorite) {\n      const newFavorites = favorites.filter(fav => fav.id !== movie.id);\n      setFavorites(newFavorites);\n      localStorage.setItem('favorites', JSON.stringify(newFavorites));\n      setIsFavorite(false);\n      toast.success('Film removed from the library');\n    } else {\n      const newFavorites = [...favorites, movieToAdd];\n      setFavorites(newFavorites);\n      localStorage.setItem('favorites', JSON.stringify(newFavorites));\n      setIsFavorite(true);\n      toast.success('Film added to the library');\n    }\n  }\n\n  useEffect(() => {\n    apiTheMovieDB\n      .fetchMovieDetalis(movieId)\n      .then(data => {\n        setMovie(data);\n      })\n      .catch('error');\n  }, [movieId]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', clickKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', clickKeyDown);\n    };\n  });\n\n  function closeModal() {\n    setUrlModal(false);\n    setTrailerId(null);\n    document.body.style.overflow = 'auto';\n  }\n\n  const clickBackdrop = e => {\n    if (e.currentTarget === e.target) {\n      closeModal();\n    }\n  };\n\n  const clickKeyDown = e => {\n    if (e.code === 'Escape') {\n      closeModal();\n    }\n  };\n\n  return (\n    <>\n      {movie && (\n        <section className={css.detalis}>\n          <Container>\n            <div className={css.btnBackDetalisWrapper}>\n              <Link to={backLink}>\n                <ButtonBack />\n              </Link>\n            </div>\n            <div className={css.detalisWrapper}>\n              <img\n                className={css.posterMovie}\n                src={\n                  movie.backdrop_path\n                    ? `https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`\n                    : posterimg\n                }\n                alt={movie.title}\n              />\n              <div className={css.columnInfo}>\n                <h2 className={css.infoTitle}>\n                  {movie.title ? movie.title : 'Movie without a title'}\n                </h2>\n                <p className={css.scoreDetalis}>\n                  User score: {(movie.vote_average * 10).toFixed(0)}%\n                </p>\n                <h3 className={css.overviewTitle}>Overview</h3>\n                <p className={css.overview}>\n                  {movie.overview ? movie.overview : 'Movie without a overview'}\n                </p>\n                <ul className={css.ganreListDetails}>\n                  {movie.genres &&\n                    movie.genres.map(({ name, id }) => (\n                      <li key={id}>{name}</li>\n                    ))}\n                </ul>\n                <ul className={css.reviewList}>\n                  <li className={css.reviewiLstItem}>\n                    <Link to=\"cast\" state={location.state} className={css.cast}>\n                      Cast\n                    </Link>\n                  </li>\n\n                  <li className={css.reviewiLstItem}>\n                    <Link\n                      to=\"review\"\n                      state={location.state}\n                      className={css.review}\n                    >\n                      Rewiew\n                    </Link>\n                  </li>\n                  <li className={css.reviewiLstItem}>\n                    <Link to={'/library'} onClick={toggleFavorites}>\n                      <button\n                        type=\"button\"\n                        className={css.addMoviesBtn}\n                        // onClick={toggleFavorites}\n                      >\n                        {isFavorite\n                          ? 'Remove from library'\n                          : 'Add movie to library'}\n                      </button>\n                    </Link>\n                  </li>\n                </ul>\n              </div>\n              <div className={css.columnImg}>\n                <img\n                  src={\n                    movie.poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                      : posterimg\n                  }\n                  alt={movie.title ? movie.title : 'Movie without a title'}\n                  width={300}\n                  className={css.detalisImg}\n                  style={{ cursor: 'pointer' }}\n                  onClick={handleFetchTrailer}\n                />\n                {urlModal && (\n                  <div className={css.videoBackdrop} onClick={clickBackdrop}>\n                    <GiReturnArrow\n                      className={css.iconBackModal}\n                      onClick={closeModal}\n                    />\n\n                    <YouTube\n                      className={css.videoModal}\n                      videoId={trailerId}\n                      opts={{\n                        width: '100%',\n                        height: '100%',\n                        playerVars: {\n                          autoplay: 1,\n                          controls: 0,\n                          cc_load_policy: 0,\n                          fs: 0,\n                          iv_load_policy: 0,\n                          modestbranding: 0,\n                          rel: 0,\n                          showinfo: 0,\n                        },\n                        origin: 'http://localhost:3000',\n                      }}\n                    />\n                  </div>\n                )}\n              </div>\n            </div>\n\n            <Suspense>\n              <Outlet />\n            </Suspense>\n          </Container>\n        </section>\n      )}\n    </>\n  );\n}\n\nexport default MovieDetalis;\n","import axios from 'axios';\nconst URL = `https://api.themoviedb.org/3/`;\nconst key = 'f27eea818d2010463700365b0c06a16e';\n\nfunction fetchTrending(page = 1) {\n  return axios\n    .get(`${URL}trending/all/day?api_key=${key}&page=${page}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchSearchMovie(query, page = 1) {\n  return axios\n    .get(`${URL}search/movie?query=${query}&api_key=${key}&page=${page}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchMovieDetalis(id) {\n  return axios\n    .get(`${URL}movie/${id}?api_key=${key}`)\n    .then(response => response.data);\n}\n\nfunction fetchMovieCredits(id) {\n  return axios\n    .get(`${URL}movie/${id}/credits?api_key=${key}`)\n    .then(response => response.data);\n}\n\nfunction fetchMovieReview(id) {\n  return axios\n    .get(`${URL}movie/${id}/reviews?api_key=${key}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchTrailerMovies(movieId) {\n  return axios\n    .get(`${URL}movie/${movieId}/videos?api_key=${key}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchAllgenres() {\n  return axios\n    .get(`${URL}/genre/movie/list?api_key=${key}`)\n    .then(response => response.data.genres);\n}\n\nfunction fetchByGenre(id, page = 1) {\n  return axios\n    .get(`${URL}/discover/movie?api_key=${key}&with_genres=${id}&page=${page}`)\n    .then(response => response.data);\n}\n\nfunction fetchActors(page = 1, query = '') {\n  const url = query\n    ? `${URL}search/person?api_key=${key}&page=${page}&query=${query}`\n    : `${URL}person/popular?api_key=${key}&page=${page}`;\n  return axios.get(url).then(response => response.data);\n}\n\nfunction fetchMoviesbyActors(id, page = 1) {\n  return axios\n    .get(`${URL}person/${id}/movie_credits?api_key=${key}&page=${page}`)\n    .then(response => response.data.cast);\n}\n\n// function fetchActorInfoAndMovies(id, page = 1) {\n//   const actorInfo = axios\n//     .get(`${URL}person/${id}?api_key=${key}&language=ru-RU`)\n//     .then(response => response.data);\n//   const actorMovies = axios\n//     .get(\n//       `${URL}person/${id}/movie_credits?api_key=${key}&language=ru-RU&page=${page}`\n//     )\n//     .then(response => response.data.cast);\n\n//   return Promise.all([actorInfo, actorMovies]).then(results => {\n//     const [info, movies] = results;\n//     return {\n//       actorInfo: info,\n//       actorMovies: movies,\n//     };\n//   });\n// }\n\nfunction fetchByYear(page = 1, selectedYear) {\n  return axios\n    .get(\n      `${URL}discover/movie?api_key=${key}&sort_by=popularity.desc&page=${page}&primary_release_year=${selectedYear}`\n    )\n    .then(response => response.data.results);\n}\n\nfunction fetchExpectedMovies() {\n  return axios\n    .get(`${URL}/movie/upcoming?api_key=${key}`)\n    .then(response => response.data.results);\n}\n\nfunction fetchFilmsByRating(currentPage = 1) {\n  return axios\n    .get(`${URL}/movie/top_rated?api_key=${key}&page=${currentPage}`)\n    .then(response => response.data);\n}\n\nfunction fetchWaitingForTheMovies(currentPage = 1) {\n  return axios\n    .get(\n      `${URL}/movie/upcoming?api_key=${key}&primary_release_date.gte=${new Date()\n        .toISOString()\n        .slice(0, 10)}&page=${currentPage}`\n    )\n    .then(response => response.data);\n}\n\nconst apiTheMovieDB = {\n  fetchMoviesbyActors,\n  // fetchActorInfoAndMovies,\n  fetchTrending,\n  fetchSearchMovie,\n  fetchMovieDetalis,\n  fetchMovieCredits,\n  fetchMovieReview,\n  fetchTrailerMovies,\n  fetchAllgenres,\n  fetchByGenre,\n  fetchActors,\n  fetchByYear,\n  fetchExpectedMovies,\n  fetchFilmsByRating,\n  fetchWaitingForTheMovies,\n};\n\nexport default apiTheMovieDB;\n"],"names":["className","css","type","movieId","useParams","useState","movie","setMovie","favorites","setFavorites","isFavorite","setIsFavorite","trailerId","setTrailerId","urlModal","setUrlModal","location","useLocation","backLink","state","from","closeModal","document","body","style","overflow","useNavigate","useEffect","favoritesFromStorage","localStorage","getItem","JSON","parse","some","fav","id","apiTheMovieDB","then","data","catch","window","addEventListener","clickKeyDown","removeEventListener","e","code","Container","to","ButtonBack","src","backdrop_path","posterimg","alt","title","vote_average","toFixed","overview","genres","map","name","onClick","movieToAdd","poster_path","release_date","slice","newFavorites","filter","setItem","stringify","toast","width","cursor","videos","trailer","find","video","key","currentTarget","target","videoId","opts","height","playerVars","autoplay","controls","cc_load_policy","fs","iv_load_policy","modestbranding","rel","showinfo","origin","Suspense","URL","fetchMoviesbyActors","page","axios","response","cast","fetchTrending","results","fetchSearchMovie","query","fetchMovieDetalis","fetchMovieCredits","fetchMovieReview","fetchTrailerMovies","fetchAllgenres","fetchByGenre","fetchActors","url","fetchByYear","selectedYear","fetchExpectedMovies","fetchFilmsByRating","currentPage","fetchWaitingForTheMovies","Date","toISOString"],"sourceRoot":""}